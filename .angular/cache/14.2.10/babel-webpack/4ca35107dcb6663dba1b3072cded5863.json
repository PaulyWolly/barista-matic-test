{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar merge_1 = require(\"../observable/merge\");\nfunction merge() {\n  var observables = [];\n  for (var _i = 0; _i < arguments.length; _i++) {\n    observables[_i] = arguments[_i];\n  }\n  return function (source) {\n    return source.lift.call(merge_1.merge.apply(void 0, [source].concat(observables)));\n  };\n}\nexports.merge = merge;","map":{"version":3,"names":["Object","defineProperty","exports","value","merge_1","require","merge","observables","_i","arguments","length","source","lift","call","apply","concat"],"sources":["C:/projects/ANGULAR/Barista-matic-main/node_modules/rxjs/internal/operators/merge.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar merge_1 = require(\"../observable/merge\");\nfunction merge() {\n    var observables = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        observables[_i] = arguments[_i];\n    }\n    return function (source) { return source.lift.call(merge_1.merge.apply(void 0, [source].concat(observables))); };\n}\nexports.merge = merge;\n"],"mappings":"AAAA,YAAY;;AACZA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAAEC,KAAK,EAAE;AAAK,CAAC,CAAC;AAC7D,IAAIC,OAAO,GAAGC,OAAO,CAAC,qBAAqB,CAAC;AAC5C,SAASC,KAAK,GAAG;EACb,IAAIC,WAAW,GAAG,EAAE;EACpB,KAAK,IAAIC,EAAE,GAAG,CAAC,EAAEA,EAAE,GAAGC,SAAS,CAACC,MAAM,EAAEF,EAAE,EAAE,EAAE;IAC1CD,WAAW,CAACC,EAAE,CAAC,GAAGC,SAAS,CAACD,EAAE,CAAC;EACnC;EACA,OAAO,UAAUG,MAAM,EAAE;IAAE,OAAOA,MAAM,CAACC,IAAI,CAACC,IAAI,CAACT,OAAO,CAACE,KAAK,CAACQ,KAAK,CAAC,KAAK,CAAC,EAAE,CAACH,MAAM,CAAC,CAACI,MAAM,CAACR,WAAW,CAAC,CAAC,CAAC;EAAE,CAAC;AACpH;AACAL,OAAO,CAACI,KAAK,GAAGA,KAAK"},"metadata":{},"sourceType":"script"}