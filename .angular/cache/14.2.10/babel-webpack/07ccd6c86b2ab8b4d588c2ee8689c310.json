{"ast":null,"code":"/**\n * @license Angular v12.2.17\n * (c) 2010-2021 Google LLC. https://angular.io/\n * License: MIT\n */\n\nimport { ɵDomAdapter, ɵsetRootDomAdapter, ɵparseCookieValue, ɵgetDOM, DOCUMENT, ɵPLATFORM_BROWSER_ID, XhrFactory, CommonModule } from '@angular/common';\nimport * as ɵngcc0 from '@angular/core';\nexport { ɵgetDOM } from '@angular/common';\nimport { InjectionToken, ApplicationInitStatus, APP_INITIALIZER, Injector, setTestabilityGetter, ɵglobal, Injectable, ApplicationRef, NgZone, ɵgetDebugNodeR2, NgProbeToken, Optional, Inject, ViewEncapsulation, APP_ID, RendererStyleFlags2, ɵConsole, NgModule, ɵɵdefineInjectable, ɵɵinject, forwardRef, SecurityContext, ɵallowSanitizationBypassAndThrow, ɵunwrapSafeValue, ɵgetSanitizationBypassType, ɵ_sanitizeUrl, ɵ_sanitizeHtml, ɵbypassSanitizationTrustHtml, ɵbypassSanitizationTrustStyle, ɵbypassSanitizationTrustScript, ɵbypassSanitizationTrustUrl, ɵbypassSanitizationTrustResourceUrl, INJECTOR, ErrorHandler, ɵsetDocument, PLATFORM_ID, PLATFORM_INITIALIZER, Sanitizer, createPlatformFactory, platformCore, ɵINJECTOR_SCOPE, RendererFactory2, Testability, ApplicationModule, SkipSelf, Version } from '@angular/core';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Provides DOM operations in any browser environment.\n *\n * @security Tread carefully! Interacting with the DOM directly is dangerous and\n * can introduce XSS risks.\n */\nclass GenericBrowserDomAdapter extends ɵDomAdapter {\n  constructor() {\n    super(...arguments);\n    this.supportsDOMEvents = true;\n  }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * A `DomAdapter` powered by full browser DOM APIs.\n *\n * @security Tread carefully! Interacting with the DOM directly is dangerous and\n * can introduce XSS risks.\n */\n/* tslint:disable:requireParameterType no-console */\nclass BrowserDomAdapter extends GenericBrowserDomAdapter {\n  static makeCurrent() {\n    ɵsetRootDomAdapter(new BrowserDomAdapter());\n  }\n  onAndCancel(el, evt, listener) {\n    el.addEventListener(evt, listener, false);\n    // Needed to follow Dart's subscription semantic, until fix of\n    // https://code.google.com/p/dart/issues/detail?id=17406\n    return () => {\n      el.removeEventListener(evt, listener, false);\n    };\n  }\n  dispatchEvent(el, evt) {\n    el.dispatchEvent(evt);\n  }\n  remove(node) {\n    if (node.parentNode) {\n      node.parentNode.removeChild(node);\n    }\n  }\n  createElement(tagName, doc) {\n    doc = doc || this.getDefaultDocument();\n    return doc.createElement(tagName);\n  }\n  createHtmlDocument() {\n    return document.implementation.createHTMLDocument('fakeTitle');\n  }\n  getDefaultDocument() {\n    return document;\n  }\n  isElementNode(node) {\n    return node.nodeType === Node.ELEMENT_NODE;\n  }\n  isShadowRoot(node) {\n    return node instanceof DocumentFragment;\n  }\n  /** @deprecated No longer being used in Ivy code. To be removed in version 14. */\n  getGlobalEventTarget(doc, target) {\n    if (target === 'window') {\n      return window;\n    }\n    if (target === 'document') {\n      return doc;\n    }\n    if (target === 'body') {\n      return doc.body;\n    }\n    return null;\n  }\n  getBaseHref(doc) {\n    const href = getBaseElementHref();\n    return href == null ? null : relativePath(href);\n  }\n  resetBaseElement() {\n    baseElement = null;\n  }\n  getUserAgent() {\n    return window.navigator.userAgent;\n  }\n  getCookie(name) {\n    return ɵparseCookieValue(document.cookie, name);\n  }\n}\nlet baseElement = null;\nfunction getBaseElementHref() {\n  baseElement = baseElement || document.querySelector('base');\n  return baseElement ? baseElement.getAttribute('href') : null;\n}\n// based on urlUtils.js in AngularJS 1\nlet urlParsingNode;\nfunction relativePath(url) {\n  urlParsingNode = urlParsingNode || document.createElement('a');\n  urlParsingNode.setAttribute('href', url);\n  const pathName = urlParsingNode.pathname;\n  return pathName.charAt(0) === '/' ? pathName : `/${pathName}`;\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * An id that identifies a particular application being bootstrapped, that should\n * match across the client/server boundary.\n */\nconst TRANSITION_ID = new InjectionToken('TRANSITION_ID');\nfunction appInitializerFactory(transitionId, document, injector) {\n  return () => {\n    // Wait for all application initializers to be completed before removing the styles set by\n    // the server.\n    injector.get(ApplicationInitStatus).donePromise.then(() => {\n      const dom = ɵgetDOM();\n      const styles = document.querySelectorAll(`style[ng-transition=\"${transitionId}\"]`);\n      for (let i = 0; i < styles.length; i++) {\n        dom.remove(styles[i]);\n      }\n    });\n  };\n}\nconst SERVER_TRANSITION_PROVIDERS = [{\n  provide: APP_INITIALIZER,\n  useFactory: appInitializerFactory,\n  deps: [TRANSITION_ID, DOCUMENT, Injector],\n  multi: true\n}];\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass BrowserGetTestability {\n  static init() {\n    setTestabilityGetter(new BrowserGetTestability());\n  }\n  addToWindow(registry) {\n    ɵglobal['getAngularTestability'] = (elem, findInAncestors = true) => {\n      const testability = registry.findTestabilityInTree(elem, findInAncestors);\n      if (testability == null) {\n        throw new Error('Could not find testability for element.');\n      }\n      return testability;\n    };\n    ɵglobal['getAllAngularTestabilities'] = () => registry.getAllTestabilities();\n    ɵglobal['getAllAngularRootElements'] = () => registry.getAllRootElements();\n    const whenAllStable = (callback /** TODO #9100 */) => {\n      const testabilities = ɵglobal['getAllAngularTestabilities']();\n      let count = testabilities.length;\n      let didWork = false;\n      const decrement = function (didWork_ /** TODO #9100 */) {\n        didWork = didWork || didWork_;\n        count--;\n        if (count == 0) {\n          callback(didWork);\n        }\n      };\n      testabilities.forEach(function (testability /** TODO #9100 */) {\n        testability.whenStable(decrement);\n      });\n    };\n    if (!ɵglobal['frameworkStabilizers']) {\n      ɵglobal['frameworkStabilizers'] = [];\n    }\n    ɵglobal['frameworkStabilizers'].push(whenAllStable);\n  }\n  findTestabilityInTree(registry, elem, findInAncestors) {\n    if (elem == null) {\n      return null;\n    }\n    const t = registry.getTestability(elem);\n    if (t != null) {\n      return t;\n    } else if (!findInAncestors) {\n      return null;\n    }\n    if (ɵgetDOM().isShadowRoot(elem)) {\n      return this.findTestabilityInTree(registry, elem.host, true);\n    }\n    return this.findTestabilityInTree(registry, elem.parentElement, true);\n  }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * A factory for `HttpXhrBackend` that uses the `XMLHttpRequest` browser API.\n */\nclass BrowserXhr {\n  build() {\n    return new XMLHttpRequest();\n  }\n}\nBrowserXhr.ɵfac = function BrowserXhr_Factory(t) {\n  return new (t || BrowserXhr)();\n};\nBrowserXhr.ɵprov = /*@__PURE__*/ɵngcc0.ɵɵdefineInjectable({\n  token: BrowserXhr,\n  factory: BrowserXhr.ɵfac\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(BrowserXhr, [{\n    type: Injectable\n  }], null, null);\n})();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst CAMEL_CASE_REGEXP = /([A-Z])/g;\nconst DASH_CASE_REGEXP = /-([a-z])/g;\nfunction camelCaseToDashCase(input) {\n  return input.replace(CAMEL_CASE_REGEXP, (...m) => '-' + m[1].toLowerCase());\n}\nfunction dashCaseToCamelCase(input) {\n  return input.replace(DASH_CASE_REGEXP, (...m) => m[1].toUpperCase());\n}\n/**\n * Exports the value under a given `name` in the global property `ng`. For example `ng.probe` if\n * `name` is `'probe'`.\n * @param name Name under which it will be exported. Keep in mind this will be a property of the\n * global `ng` object.\n * @param value The value to export.\n */\nfunction exportNgVar(name, value) {\n  if (typeof COMPILED === 'undefined' || !COMPILED) {\n    // Note: we can't export `ng` when using closure enhanced optimization as:\n    // - closure declares globals itself for minified names, which sometimes clobber our `ng` global\n    // - we can't declare a closure extern as the namespace `ng` is already used within Google\n    //   for typings for angularJS (via `goog.provide('ng....')`).\n    const ng = ɵglobal['ng'] = ɵglobal['ng'] || {};\n    ng[name] = value;\n  }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst ɵ0 = () => ({\n  'ApplicationRef': ApplicationRef,\n  'NgZone': NgZone\n});\nconst CORE_TOKENS = ɵ0();\nconst INSPECT_GLOBAL_NAME = 'probe';\nconst CORE_TOKENS_GLOBAL_NAME = 'coreTokens';\n/**\n * Returns a {@link DebugElement} for the given native DOM element, or\n * null if the given native element does not have an Angular view associated\n * with it.\n */\nfunction inspectNativeElementR2(element) {\n  return ɵgetDebugNodeR2(element);\n}\nfunction _createNgProbeR2(coreTokens) {\n  exportNgVar(INSPECT_GLOBAL_NAME, inspectNativeElementR2);\n  exportNgVar(CORE_TOKENS_GLOBAL_NAME, Object.assign(Object.assign({}, CORE_TOKENS), _ngProbeTokensToMap(coreTokens || [])));\n  return () => inspectNativeElementR2;\n}\nfunction _ngProbeTokensToMap(tokens) {\n  return tokens.reduce((prev, t) => (prev[t.name] = t.token, prev), {});\n}\n/**\n * In Ivy, we don't support NgProbe because we have our own set of testing utilities\n * with more robust functionality.\n *\n * We shouldn't bring in NgProbe because it prevents DebugNode and friends from\n * tree-shaking properly.\n */\nconst ELEMENT_PROBE_PROVIDERS__POST_R3__ = [];\n/**\n * Providers which support debugging Angular applications (e.g. via `ng.probe`).\n */\nconst ELEMENT_PROBE_PROVIDERS__PRE_R3__ = [{\n  provide: APP_INITIALIZER,\n  useFactory: _createNgProbeR2,\n  deps: [[NgProbeToken, new Optional()]],\n  multi: true\n}];\nconst ELEMENT_PROBE_PROVIDERS = ELEMENT_PROBE_PROVIDERS__PRE_R3__;\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * The injection token for the event-manager plug-in service.\n *\n * @publicApi\n */\nconst EVENT_MANAGER_PLUGINS = new InjectionToken('EventManagerPlugins');\n/**\n * An injectable service that provides event management for Angular\n * through a browser plug-in.\n *\n * @publicApi\n */\nclass EventManager {\n  /**\n   * Initializes an instance of the event-manager service.\n   */\n  constructor(plugins, _zone) {\n    this._zone = _zone;\n    this._eventNameToPlugin = new Map();\n    plugins.forEach(p => p.manager = this);\n    this._plugins = plugins.slice().reverse();\n  }\n  /**\n   * Registers a handler for a specific element and event.\n   *\n   * @param element The HTML element to receive event notifications.\n   * @param eventName The name of the event to listen for.\n   * @param handler A function to call when the notification occurs. Receives the\n   * event object as an argument.\n   * @returns  A callback function that can be used to remove the handler.\n   */\n  addEventListener(element, eventName, handler) {\n    const plugin = this._findPluginFor(eventName);\n    return plugin.addEventListener(element, eventName, handler);\n  }\n  /**\n   * Registers a global handler for an event in a target view.\n   *\n   * @param target A target for global event notifications. One of \"window\", \"document\", or \"body\".\n   * @param eventName The name of the event to listen for.\n   * @param handler A function to call when the notification occurs. Receives the\n   * event object as an argument.\n   * @returns A callback function that can be used to remove the handler.\n   * @deprecated No longer being used in Ivy code. To be removed in version 14.\n   */\n  addGlobalEventListener(target, eventName, handler) {\n    const plugin = this._findPluginFor(eventName);\n    return plugin.addGlobalEventListener(target, eventName, handler);\n  }\n  /**\n   * Retrieves the compilation zone in which event listeners are registered.\n   */\n  getZone() {\n    return this._zone;\n  }\n  /** @internal */\n  _findPluginFor(eventName) {\n    const plugin = this._eventNameToPlugin.get(eventName);\n    if (plugin) {\n      return plugin;\n    }\n    const plugins = this._plugins;\n    for (let i = 0; i < plugins.length; i++) {\n      const plugin = plugins[i];\n      if (plugin.supports(eventName)) {\n        this._eventNameToPlugin.set(eventName, plugin);\n        return plugin;\n      }\n    }\n    throw new Error(`No event manager plugin found for event ${eventName}`);\n  }\n}\nEventManager.ɵfac = function EventManager_Factory(t) {\n  return new (t || EventManager)(ɵngcc0.ɵɵinject(EVENT_MANAGER_PLUGINS), ɵngcc0.ɵɵinject(ɵngcc0.NgZone));\n};\nEventManager.ɵprov = /*@__PURE__*/ɵngcc0.ɵɵdefineInjectable({\n  token: EventManager,\n  factory: EventManager.ɵfac\n});\nEventManager.ctorParameters = () => [{\n  type: Array,\n  decorators: [{\n    type: Inject,\n    args: [EVENT_MANAGER_PLUGINS]\n  }]\n}, {\n  type: NgZone\n}];\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(EventManager, [{\n    type: Injectable\n  }], function () {\n    return [{\n      type: Array,\n      decorators: [{\n        type: Inject,\n        args: [EVENT_MANAGER_PLUGINS]\n      }]\n    }, {\n      type: ɵngcc0.NgZone\n    }];\n  }, null);\n})();\nclass EventManagerPlugin {\n  constructor(_doc) {\n    this._doc = _doc;\n  }\n  addGlobalEventListener(element, eventName, handler) {\n    const target = ɵgetDOM().getGlobalEventTarget(this._doc, element);\n    if (!target) {\n      throw new Error(`Unsupported event target ${target} for event ${eventName}`);\n    }\n    return this.addEventListener(target, eventName, handler);\n  }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass SharedStylesHost {\n  constructor() {\n    /** @internal */\n    this._stylesSet = new Set();\n  }\n  addStyles(styles) {\n    const additions = new Set();\n    styles.forEach(style => {\n      if (!this._stylesSet.has(style)) {\n        this._stylesSet.add(style);\n        additions.add(style);\n      }\n    });\n    this.onStylesAdded(additions);\n  }\n  onStylesAdded(additions) {}\n  getAllStyles() {\n    return Array.from(this._stylesSet);\n  }\n}\nSharedStylesHost.ɵfac = function SharedStylesHost_Factory(t) {\n  return new (t || SharedStylesHost)();\n};\nSharedStylesHost.ɵprov = /*@__PURE__*/ɵngcc0.ɵɵdefineInjectable({\n  token: SharedStylesHost,\n  factory: SharedStylesHost.ɵfac\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(SharedStylesHost, [{\n    type: Injectable\n  }], function () {\n    return [];\n  }, null);\n})();\nclass DomSharedStylesHost extends SharedStylesHost {\n  constructor(_doc) {\n    super();\n    this._doc = _doc;\n    // Maps all registered host nodes to a list of style nodes that have been added to the host node.\n    this._hostNodes = new Map();\n    this._hostNodes.set(_doc.head, []);\n  }\n  _addStylesToHost(styles, host, styleNodes) {\n    styles.forEach(style => {\n      const styleEl = this._doc.createElement('style');\n      styleEl.textContent = style;\n      styleNodes.push(host.appendChild(styleEl));\n    });\n  }\n  addHost(hostNode) {\n    const styleNodes = [];\n    this._addStylesToHost(this._stylesSet, hostNode, styleNodes);\n    this._hostNodes.set(hostNode, styleNodes);\n  }\n  removeHost(hostNode) {\n    const styleNodes = this._hostNodes.get(hostNode);\n    if (styleNodes) {\n      styleNodes.forEach(removeStyle);\n    }\n    this._hostNodes.delete(hostNode);\n  }\n  onStylesAdded(additions) {\n    this._hostNodes.forEach((styleNodes, hostNode) => {\n      this._addStylesToHost(additions, hostNode, styleNodes);\n    });\n  }\n  ngOnDestroy() {\n    this._hostNodes.forEach(styleNodes => styleNodes.forEach(removeStyle));\n  }\n}\nDomSharedStylesHost.ɵfac = function DomSharedStylesHost_Factory(t) {\n  return new (t || DomSharedStylesHost)(ɵngcc0.ɵɵinject(DOCUMENT));\n};\nDomSharedStylesHost.ɵprov = /*@__PURE__*/ɵngcc0.ɵɵdefineInjectable({\n  token: DomSharedStylesHost,\n  factory: DomSharedStylesHost.ɵfac\n});\nDomSharedStylesHost.ctorParameters = () => [{\n  type: undefined,\n  decorators: [{\n    type: Inject,\n    args: [DOCUMENT]\n  }]\n}];\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(DomSharedStylesHost, [{\n    type: Injectable\n  }], function () {\n    return [{\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [DOCUMENT]\n      }]\n    }];\n  }, null);\n})();\nfunction removeStyle(styleNode) {\n  ɵgetDOM().remove(styleNode);\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst NAMESPACE_URIS = {\n  'svg': 'http://www.w3.org/2000/svg',\n  'xhtml': 'http://www.w3.org/1999/xhtml',\n  'xlink': 'http://www.w3.org/1999/xlink',\n  'xml': 'http://www.w3.org/XML/1998/namespace',\n  'xmlns': 'http://www.w3.org/2000/xmlns/'\n};\nconst COMPONENT_REGEX = /%COMP%/g;\nconst NG_DEV_MODE = typeof ngDevMode === 'undefined' || !!ngDevMode;\nconst COMPONENT_VARIABLE = '%COMP%';\nconst HOST_ATTR = `_nghost-${COMPONENT_VARIABLE}`;\nconst CONTENT_ATTR = `_ngcontent-${COMPONENT_VARIABLE}`;\nfunction shimContentAttribute(componentShortId) {\n  return CONTENT_ATTR.replace(COMPONENT_REGEX, componentShortId);\n}\nfunction shimHostAttribute(componentShortId) {\n  return HOST_ATTR.replace(COMPONENT_REGEX, componentShortId);\n}\nfunction flattenStyles(compId, styles, target) {\n  for (let i = 0; i < styles.length; i++) {\n    let style = styles[i];\n    if (Array.isArray(style)) {\n      flattenStyles(compId, style, target);\n    } else {\n      style = style.replace(COMPONENT_REGEX, compId);\n      target.push(style);\n    }\n  }\n  return target;\n}\nfunction decoratePreventDefault(eventHandler) {\n  // `DebugNode.triggerEventHandler` needs to know if the listener was created with\n  // decoratePreventDefault or is a listener added outside the Angular context so it can handle the\n  // two differently. In the first case, the special '__ngUnwrap__' token is passed to the unwrap\n  // the listener (see below).\n  return event => {\n    // Ivy uses '__ngUnwrap__' as a special token that allows us to unwrap the function\n    // so that it can be invoked programmatically by `DebugNode.triggerEventHandler`. The debug_node\n    // can inspect the listener toString contents for the existence of this special token. Because\n    // the token is a string literal, it is ensured to not be modified by compiled code.\n    if (event === '__ngUnwrap__') {\n      return eventHandler;\n    }\n    const allowDefaultBehavior = eventHandler(event);\n    if (allowDefaultBehavior === false) {\n      // TODO(tbosch): move preventDefault into event plugins...\n      event.preventDefault();\n      event.returnValue = false;\n    }\n    return undefined;\n  };\n}\nlet hasLoggedNativeEncapsulationWarning = false;\nclass DomRendererFactory2 {\n  constructor(eventManager, sharedStylesHost, appId) {\n    this.eventManager = eventManager;\n    this.sharedStylesHost = sharedStylesHost;\n    this.appId = appId;\n    this.rendererByCompId = new Map();\n    this.defaultRenderer = new DefaultDomRenderer2(eventManager);\n  }\n  createRenderer(element, type) {\n    if (!element || !type) {\n      return this.defaultRenderer;\n    }\n    switch (type.encapsulation) {\n      case ViewEncapsulation.Emulated:\n        {\n          let renderer = this.rendererByCompId.get(type.id);\n          if (!renderer) {\n            renderer = new EmulatedEncapsulationDomRenderer2(this.eventManager, this.sharedStylesHost, type, this.appId);\n            this.rendererByCompId.set(type.id, renderer);\n          }\n          renderer.applyToHost(element);\n          return renderer;\n        }\n      // @ts-ignore TODO: Remove as part of FW-2290. TS complains about us dealing with an enum\n      // value that is not known (but previously was the value for ViewEncapsulation.Native)\n      case 1:\n      case ViewEncapsulation.ShadowDom:\n        // TODO(FW-2290): remove the `case 1:` fallback logic and the warning in v12.\n        if ((typeof ngDevMode === 'undefined' || ngDevMode) &&\n        // @ts-ignore TODO: Remove as part of FW-2290. TS complains about us dealing with an\n        // enum value that is not known (but previously was the value for\n        // ViewEncapsulation.Native)\n        !hasLoggedNativeEncapsulationWarning && type.encapsulation === 1) {\n          hasLoggedNativeEncapsulationWarning = true;\n          console.warn('ViewEncapsulation.Native is no longer supported. Falling back to ViewEncapsulation.ShadowDom. The fallback will be removed in v12.');\n        }\n        return new ShadowDomRenderer(this.eventManager, this.sharedStylesHost, element, type);\n      default:\n        {\n          if (!this.rendererByCompId.has(type.id)) {\n            const styles = flattenStyles(type.id, type.styles, []);\n            this.sharedStylesHost.addStyles(styles);\n            this.rendererByCompId.set(type.id, this.defaultRenderer);\n          }\n          return this.defaultRenderer;\n        }\n    }\n  }\n  begin() {}\n  end() {}\n}\nDomRendererFactory2.ɵfac = function DomRendererFactory2_Factory(t) {\n  return new (t || DomRendererFactory2)(ɵngcc0.ɵɵinject(EventManager), ɵngcc0.ɵɵinject(DomSharedStylesHost), ɵngcc0.ɵɵinject(APP_ID));\n};\nDomRendererFactory2.ɵprov = /*@__PURE__*/ɵngcc0.ɵɵdefineInjectable({\n  token: DomRendererFactory2,\n  factory: DomRendererFactory2.ɵfac\n});\nDomRendererFactory2.ctorParameters = () => [{\n  type: EventManager\n}, {\n  type: DomSharedStylesHost\n}, {\n  type: String,\n  decorators: [{\n    type: Inject,\n    args: [APP_ID]\n  }]\n}];\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(DomRendererFactory2, [{\n    type: Injectable\n  }], function () {\n    return [{\n      type: EventManager\n    }, {\n      type: DomSharedStylesHost\n    }, {\n      type: String,\n      decorators: [{\n        type: Inject,\n        args: [APP_ID]\n      }]\n    }];\n  }, null);\n})();\nclass DefaultDomRenderer2 {\n  constructor(eventManager) {\n    this.eventManager = eventManager;\n    this.data = Object.create(null);\n  }\n  destroy() {}\n  createElement(name, namespace) {\n    if (namespace) {\n      // In cases where Ivy (not ViewEngine) is giving us the actual namespace, the look up by key\n      // will result in undefined, so we just return the namespace here.\n      return document.createElementNS(NAMESPACE_URIS[namespace] || namespace, name);\n    }\n    return document.createElement(name);\n  }\n  createComment(value) {\n    return document.createComment(value);\n  }\n  createText(value) {\n    return document.createTextNode(value);\n  }\n  appendChild(parent, newChild) {\n    parent.appendChild(newChild);\n  }\n  insertBefore(parent, newChild, refChild) {\n    if (parent) {\n      parent.insertBefore(newChild, refChild);\n    }\n  }\n  removeChild(parent, oldChild) {\n    if (parent) {\n      parent.removeChild(oldChild);\n    }\n  }\n  selectRootElement(selectorOrNode, preserveContent) {\n    let el = typeof selectorOrNode === 'string' ? document.querySelector(selectorOrNode) : selectorOrNode;\n    if (!el) {\n      throw new Error(`The selector \"${selectorOrNode}\" did not match any elements`);\n    }\n    if (!preserveContent) {\n      el.textContent = '';\n    }\n    return el;\n  }\n  parentNode(node) {\n    return node.parentNode;\n  }\n  nextSibling(node) {\n    return node.nextSibling;\n  }\n  setAttribute(el, name, value, namespace) {\n    if (namespace) {\n      name = namespace + ':' + name;\n      // TODO(FW-811): Ivy may cause issues here because it's passing around\n      // full URIs for namespaces, therefore this lookup will fail.\n      const namespaceUri = NAMESPACE_URIS[namespace];\n      if (namespaceUri) {\n        el.setAttributeNS(namespaceUri, name, value);\n      } else {\n        el.setAttribute(name, value);\n      }\n    } else {\n      el.setAttribute(name, value);\n    }\n  }\n  removeAttribute(el, name, namespace) {\n    if (namespace) {\n      // TODO(FW-811): Ivy may cause issues here because it's passing around\n      // full URIs for namespaces, therefore this lookup will fail.\n      const namespaceUri = NAMESPACE_URIS[namespace];\n      if (namespaceUri) {\n        el.removeAttributeNS(namespaceUri, name);\n      } else {\n        // TODO(FW-811): Since ivy is passing around full URIs for namespaces\n        // this could result in properties like `http://www.w3.org/2000/svg:cx=\"123\"`,\n        // which is wrong.\n        el.removeAttribute(`${namespace}:${name}`);\n      }\n    } else {\n      el.removeAttribute(name);\n    }\n  }\n  addClass(el, name) {\n    el.classList.add(name);\n  }\n  removeClass(el, name) {\n    el.classList.remove(name);\n  }\n  setStyle(el, style, value, flags) {\n    if (flags & (RendererStyleFlags2.DashCase | RendererStyleFlags2.Important)) {\n      el.style.setProperty(style, value, flags & RendererStyleFlags2.Important ? 'important' : '');\n    } else {\n      el.style[style] = value;\n    }\n  }\n  removeStyle(el, style, flags) {\n    if (flags & RendererStyleFlags2.DashCase) {\n      el.style.removeProperty(style);\n    } else {\n      // IE requires '' instead of null\n      // see https://github.com/angular/angular/issues/7916\n      el.style[style] = '';\n    }\n  }\n  setProperty(el, name, value) {\n    NG_DEV_MODE && checkNoSyntheticProp(name, 'property');\n    el[name] = value;\n  }\n  setValue(node, value) {\n    node.nodeValue = value;\n  }\n  listen(target, event, callback) {\n    NG_DEV_MODE && checkNoSyntheticProp(event, 'listener');\n    if (typeof target === 'string') {\n      return this.eventManager.addGlobalEventListener(target, event, decoratePreventDefault(callback));\n    }\n    return this.eventManager.addEventListener(target, event, decoratePreventDefault(callback));\n  }\n}\nconst ɵ0$1 = () => '@'.charCodeAt(0);\nconst AT_CHARCODE = ɵ0$1();\nfunction checkNoSyntheticProp(name, nameKind) {\n  if (name.charCodeAt(0) === AT_CHARCODE) {\n    throw new Error(`Unexpected synthetic ${nameKind} ${name} found. Please make sure that:\n  - Either \\`BrowserAnimationsModule\\` or \\`NoopAnimationsModule\\` are imported in your application.\n  - There is corresponding configuration for the animation named \\`${name}\\` defined in the \\`animations\\` field of the \\`@Component\\` decorator (see https://angular.io/api/core/Component#animations).`);\n  }\n}\nclass EmulatedEncapsulationDomRenderer2 extends DefaultDomRenderer2 {\n  constructor(eventManager, sharedStylesHost, component, appId) {\n    super(eventManager);\n    this.component = component;\n    const styles = flattenStyles(appId + '-' + component.id, component.styles, []);\n    sharedStylesHost.addStyles(styles);\n    this.contentAttr = shimContentAttribute(appId + '-' + component.id);\n    this.hostAttr = shimHostAttribute(appId + '-' + component.id);\n  }\n  applyToHost(element) {\n    super.setAttribute(element, this.hostAttr, '');\n  }\n  createElement(parent, name) {\n    const el = super.createElement(parent, name);\n    super.setAttribute(el, this.contentAttr, '');\n    return el;\n  }\n}\nclass ShadowDomRenderer extends DefaultDomRenderer2 {\n  constructor(eventManager, sharedStylesHost, hostEl, component) {\n    super(eventManager);\n    this.sharedStylesHost = sharedStylesHost;\n    this.hostEl = hostEl;\n    this.shadowRoot = hostEl.attachShadow({\n      mode: 'open'\n    });\n    this.sharedStylesHost.addHost(this.shadowRoot);\n    const styles = flattenStyles(component.id, component.styles, []);\n    for (let i = 0; i < styles.length; i++) {\n      const styleEl = document.createElement('style');\n      styleEl.textContent = styles[i];\n      this.shadowRoot.appendChild(styleEl);\n    }\n  }\n  nodeOrShadowRoot(node) {\n    return node === this.hostEl ? this.shadowRoot : node;\n  }\n  destroy() {\n    this.sharedStylesHost.removeHost(this.shadowRoot);\n  }\n  appendChild(parent, newChild) {\n    return super.appendChild(this.nodeOrShadowRoot(parent), newChild);\n  }\n  insertBefore(parent, newChild, refChild) {\n    return super.insertBefore(this.nodeOrShadowRoot(parent), newChild, refChild);\n  }\n  removeChild(parent, oldChild) {\n    return super.removeChild(this.nodeOrShadowRoot(parent), oldChild);\n  }\n  parentNode(node) {\n    return this.nodeOrShadowRoot(super.parentNode(this.nodeOrShadowRoot(node)));\n  }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass DomEventsPlugin extends EventManagerPlugin {\n  constructor(doc) {\n    super(doc);\n  }\n  // This plugin should come last in the list of plugins, because it accepts all\n  // events.\n  supports(eventName) {\n    return true;\n  }\n  addEventListener(element, eventName, handler) {\n    element.addEventListener(eventName, handler, false);\n    return () => this.removeEventListener(element, eventName, handler);\n  }\n  removeEventListener(target, eventName, callback) {\n    return target.removeEventListener(eventName, callback);\n  }\n}\nDomEventsPlugin.ɵfac = function DomEventsPlugin_Factory(t) {\n  return new (t || DomEventsPlugin)(ɵngcc0.ɵɵinject(DOCUMENT));\n};\nDomEventsPlugin.ɵprov = /*@__PURE__*/ɵngcc0.ɵɵdefineInjectable({\n  token: DomEventsPlugin,\n  factory: DomEventsPlugin.ɵfac\n});\nDomEventsPlugin.ctorParameters = () => [{\n  type: undefined,\n  decorators: [{\n    type: Inject,\n    args: [DOCUMENT]\n  }]\n}];\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(DomEventsPlugin, [{\n    type: Injectable\n  }], function () {\n    return [{\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [DOCUMENT]\n      }]\n    }];\n  }, null);\n})();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Supported HammerJS recognizer event names.\n */\nconst EVENT_NAMES = {\n  // pan\n  'pan': true,\n  'panstart': true,\n  'panmove': true,\n  'panend': true,\n  'pancancel': true,\n  'panleft': true,\n  'panright': true,\n  'panup': true,\n  'pandown': true,\n  // pinch\n  'pinch': true,\n  'pinchstart': true,\n  'pinchmove': true,\n  'pinchend': true,\n  'pinchcancel': true,\n  'pinchin': true,\n  'pinchout': true,\n  // press\n  'press': true,\n  'pressup': true,\n  // rotate\n  'rotate': true,\n  'rotatestart': true,\n  'rotatemove': true,\n  'rotateend': true,\n  'rotatecancel': true,\n  // swipe\n  'swipe': true,\n  'swipeleft': true,\n  'swiperight': true,\n  'swipeup': true,\n  'swipedown': true,\n  // tap\n  'tap': true,\n  'doubletap': true\n};\n/**\n * DI token for providing [HammerJS](https://hammerjs.github.io/) support to Angular.\n * @see `HammerGestureConfig`\n *\n * @ngModule HammerModule\n * @publicApi\n */\nconst HAMMER_GESTURE_CONFIG = new InjectionToken('HammerGestureConfig');\n/**\n * Injection token used to provide a {@link HammerLoader} to Angular.\n *\n * @publicApi\n */\nconst HAMMER_LOADER = new InjectionToken('HammerLoader');\n/**\n * An injectable [HammerJS Manager](https://hammerjs.github.io/api/#hammermanager)\n * for gesture recognition. Configures specific event recognition.\n * @publicApi\n */\nclass HammerGestureConfig {\n  constructor() {\n    /**\n     * A set of supported event names for gestures to be used in Angular.\n     * Angular supports all built-in recognizers, as listed in\n     * [HammerJS documentation](https://hammerjs.github.io/).\n     */\n    this.events = [];\n    /**\n     * Maps gesture event names to a set of configuration options\n     * that specify overrides to the default values for specific properties.\n     *\n     * The key is a supported event name to be configured,\n     * and the options object contains a set of properties, with override values\n     * to be applied to the named recognizer event.\n     * For example, to disable recognition of the rotate event, specify\n     *  `{\"rotate\": {\"enable\": false}}`.\n     *\n     * Properties that are not present take the HammerJS default values.\n     * For information about which properties are supported for which events,\n     * and their allowed and default values, see\n     * [HammerJS documentation](https://hammerjs.github.io/).\n     *\n     */\n    this.overrides = {};\n  }\n  /**\n   * Creates a [HammerJS Manager](https://hammerjs.github.io/api/#hammermanager)\n   * and attaches it to a given HTML element.\n   * @param element The element that will recognize gestures.\n   * @returns A HammerJS event-manager object.\n   */\n  buildHammer(element) {\n    const mc = new Hammer(element, this.options);\n    mc.get('pinch').set({\n      enable: true\n    });\n    mc.get('rotate').set({\n      enable: true\n    });\n    for (const eventName in this.overrides) {\n      mc.get(eventName).set(this.overrides[eventName]);\n    }\n    return mc;\n  }\n}\nHammerGestureConfig.ɵfac = function HammerGestureConfig_Factory(t) {\n  return new (t || HammerGestureConfig)();\n};\nHammerGestureConfig.ɵprov = /*@__PURE__*/ɵngcc0.ɵɵdefineInjectable({\n  token: HammerGestureConfig,\n  factory: HammerGestureConfig.ɵfac\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(HammerGestureConfig, [{\n    type: Injectable\n  }], function () {\n    return [];\n  }, null);\n})();\n/**\n * Event plugin that adds Hammer support to an application.\n *\n * @ngModule HammerModule\n */\nclass HammerGesturesPlugin extends EventManagerPlugin {\n  constructor(doc, _config, console, loader) {\n    super(doc);\n    this._config = _config;\n    this.console = console;\n    this.loader = loader;\n    this._loaderPromise = null;\n  }\n  supports(eventName) {\n    if (!EVENT_NAMES.hasOwnProperty(eventName.toLowerCase()) && !this.isCustomEvent(eventName)) {\n      return false;\n    }\n    if (!window.Hammer && !this.loader) {\n      if (typeof ngDevMode === 'undefined' || ngDevMode) {\n        this.console.warn(`The \"${eventName}\" event cannot be bound because Hammer.JS is not ` + `loaded and no custom loader has been specified.`);\n      }\n      return false;\n    }\n    return true;\n  }\n  addEventListener(element, eventName, handler) {\n    const zone = this.manager.getZone();\n    eventName = eventName.toLowerCase();\n    // If Hammer is not present but a loader is specified, we defer adding the event listener\n    // until Hammer is loaded.\n    if (!window.Hammer && this.loader) {\n      this._loaderPromise = this._loaderPromise || this.loader();\n      // This `addEventListener` method returns a function to remove the added listener.\n      // Until Hammer is loaded, the returned function needs to *cancel* the registration rather\n      // than remove anything.\n      let cancelRegistration = false;\n      let deregister = () => {\n        cancelRegistration = true;\n      };\n      this._loaderPromise.then(() => {\n        // If Hammer isn't actually loaded when the custom loader resolves, give up.\n        if (!window.Hammer) {\n          if (typeof ngDevMode === 'undefined' || ngDevMode) {\n            this.console.warn(`The custom HAMMER_LOADER completed, but Hammer.JS is not present.`);\n          }\n          deregister = () => {};\n          return;\n        }\n        if (!cancelRegistration) {\n          // Now that Hammer is loaded and the listener is being loaded for real,\n          // the deregistration function changes from canceling registration to removal.\n          deregister = this.addEventListener(element, eventName, handler);\n        }\n      }).catch(() => {\n        if (typeof ngDevMode === 'undefined' || ngDevMode) {\n          this.console.warn(`The \"${eventName}\" event cannot be bound because the custom ` + `Hammer.JS loader failed.`);\n        }\n        deregister = () => {};\n      });\n      // Return a function that *executes* `deregister` (and not `deregister` itself) so that we\n      // can change the behavior of `deregister` once the listener is added. Using a closure in\n      // this way allows us to avoid any additional data structures to track listener removal.\n      return () => {\n        deregister();\n      };\n    }\n    return zone.runOutsideAngular(() => {\n      // Creating the manager bind events, must be done outside of angular\n      const mc = this._config.buildHammer(element);\n      const callback = function (eventObj) {\n        zone.runGuarded(function () {\n          handler(eventObj);\n        });\n      };\n      mc.on(eventName, callback);\n      return () => {\n        mc.off(eventName, callback);\n        // destroy mc to prevent memory leak\n        if (typeof mc.destroy === 'function') {\n          mc.destroy();\n        }\n      };\n    });\n  }\n  isCustomEvent(eventName) {\n    return this._config.events.indexOf(eventName) > -1;\n  }\n}\nHammerGesturesPlugin.ɵfac = function HammerGesturesPlugin_Factory(t) {\n  return new (t || HammerGesturesPlugin)(ɵngcc0.ɵɵinject(DOCUMENT), ɵngcc0.ɵɵinject(HAMMER_GESTURE_CONFIG), ɵngcc0.ɵɵinject(ɵngcc0.ɵConsole), ɵngcc0.ɵɵinject(HAMMER_LOADER, 8));\n};\nHammerGesturesPlugin.ɵprov = /*@__PURE__*/ɵngcc0.ɵɵdefineInjectable({\n  token: HammerGesturesPlugin,\n  factory: HammerGesturesPlugin.ɵfac\n});\nHammerGesturesPlugin.ctorParameters = () => [{\n  type: undefined,\n  decorators: [{\n    type: Inject,\n    args: [DOCUMENT]\n  }]\n}, {\n  type: HammerGestureConfig,\n  decorators: [{\n    type: Inject,\n    args: [HAMMER_GESTURE_CONFIG]\n  }]\n}, {\n  type: ɵConsole\n}, {\n  type: undefined,\n  decorators: [{\n    type: Optional\n  }, {\n    type: Inject,\n    args: [HAMMER_LOADER]\n  }]\n}];\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(HammerGesturesPlugin, [{\n    type: Injectable\n  }], function () {\n    return [{\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [DOCUMENT]\n      }]\n    }, {\n      type: HammerGestureConfig,\n      decorators: [{\n        type: Inject,\n        args: [HAMMER_GESTURE_CONFIG]\n      }]\n    }, {\n      type: ɵngcc0.ɵConsole\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [HAMMER_LOADER]\n      }]\n    }];\n  }, null);\n})();\n/**\n * In Ivy, support for Hammer gestures is optional, so applications must\n * import the `HammerModule` at root to turn on support. This means that\n * Hammer-specific code can be tree-shaken away if not needed.\n */\nconst HAMMER_PROVIDERS__POST_R3__ = [];\n/**\n * In View Engine, support for Hammer gestures is built-in by default.\n */\nconst HAMMER_PROVIDERS__PRE_R3__ = [{\n  provide: EVENT_MANAGER_PLUGINS,\n  useClass: HammerGesturesPlugin,\n  multi: true,\n  deps: [DOCUMENT, HAMMER_GESTURE_CONFIG, ɵConsole, [new Optional(), HAMMER_LOADER]]\n}, {\n  provide: HAMMER_GESTURE_CONFIG,\n  useClass: HammerGestureConfig,\n  deps: []\n}];\nconst HAMMER_PROVIDERS = HAMMER_PROVIDERS__PRE_R3__;\n/**\n * Adds support for HammerJS.\n *\n * Import this module at the root of your application so that Angular can work with\n * HammerJS to detect gesture events.\n *\n * Note that applications still need to include the HammerJS script itself. This module\n * simply sets up the coordination layer between HammerJS and Angular's EventManager.\n *\n * @publicApi\n */\nclass HammerModule {}\nHammerModule.ɵfac = function HammerModule_Factory(t) {\n  return new (t || HammerModule)();\n};\nHammerModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n  type: HammerModule\n});\nHammerModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({\n  providers: HAMMER_PROVIDERS__PRE_R3__\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(HammerModule, [{\n    type: NgModule,\n    args: [{\n      providers: HAMMER_PROVIDERS__PRE_R3__\n    }]\n  }], null, null);\n})();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Defines supported modifiers for key events.\n */\nconst MODIFIER_KEYS = ['alt', 'control', 'meta', 'shift'];\nconst DOM_KEY_LOCATION_NUMPAD = 3;\n// Map to convert some key or keyIdentifier values to what will be returned by getEventKey\nconst _keyMap = {\n  // The following values are here for cross-browser compatibility and to match the W3C standard\n  // cf https://www.w3.org/TR/DOM-Level-3-Events-key/\n  '\\b': 'Backspace',\n  '\\t': 'Tab',\n  '\\x7F': 'Delete',\n  '\\x1B': 'Escape',\n  'Del': 'Delete',\n  'Esc': 'Escape',\n  'Left': 'ArrowLeft',\n  'Right': 'ArrowRight',\n  'Up': 'ArrowUp',\n  'Down': 'ArrowDown',\n  'Menu': 'ContextMenu',\n  'Scroll': 'ScrollLock',\n  'Win': 'OS'\n};\n// There is a bug in Chrome for numeric keypad keys:\n// https://code.google.com/p/chromium/issues/detail?id=155654\n// 1, 2, 3 ... are reported as A, B, C ...\nconst _chromeNumKeyPadMap = {\n  'A': '1',\n  'B': '2',\n  'C': '3',\n  'D': '4',\n  'E': '5',\n  'F': '6',\n  'G': '7',\n  'H': '8',\n  'I': '9',\n  'J': '*',\n  'K': '+',\n  'M': '-',\n  'N': '.',\n  'O': '/',\n  '\\x60': '0',\n  '\\x90': 'NumLock'\n};\nconst ɵ0$2 = event => event.altKey,\n  ɵ1 = event => event.ctrlKey,\n  ɵ2 = event => event.metaKey,\n  ɵ3 = event => event.shiftKey;\n/**\n * Retrieves modifiers from key-event objects.\n */\nconst MODIFIER_KEY_GETTERS = {\n  'alt': ɵ0$2,\n  'control': ɵ1,\n  'meta': ɵ2,\n  'shift': ɵ3\n};\n/**\n * @publicApi\n * A browser plug-in that provides support for handling of key events in Angular.\n */\nclass KeyEventsPlugin extends EventManagerPlugin {\n  /**\n   * Initializes an instance of the browser plug-in.\n   * @param doc The document in which key events will be detected.\n   */\n  constructor(doc) {\n    super(doc);\n  }\n  /**\n   * Reports whether a named key event is supported.\n   * @param eventName The event name to query.\n   * @return True if the named key event is supported.\n   */\n  supports(eventName) {\n    return KeyEventsPlugin.parseEventName(eventName) != null;\n  }\n  /**\n   * Registers a handler for a specific element and key event.\n   * @param element The HTML element to receive event notifications.\n   * @param eventName The name of the key event to listen for.\n   * @param handler A function to call when the notification occurs. Receives the\n   * event object as an argument.\n   * @returns The key event that was registered.\n   */\n  addEventListener(element, eventName, handler) {\n    const parsedEvent = KeyEventsPlugin.parseEventName(eventName);\n    const outsideHandler = KeyEventsPlugin.eventCallback(parsedEvent['fullKey'], handler, this.manager.getZone());\n    return this.manager.getZone().runOutsideAngular(() => {\n      return ɵgetDOM().onAndCancel(element, parsedEvent['domEventName'], outsideHandler);\n    });\n  }\n  static parseEventName(eventName) {\n    const parts = eventName.toLowerCase().split('.');\n    const domEventName = parts.shift();\n    if (parts.length === 0 || !(domEventName === 'keydown' || domEventName === 'keyup')) {\n      return null;\n    }\n    const key = KeyEventsPlugin._normalizeKey(parts.pop());\n    let fullKey = '';\n    MODIFIER_KEYS.forEach(modifierName => {\n      const index = parts.indexOf(modifierName);\n      if (index > -1) {\n        parts.splice(index, 1);\n        fullKey += modifierName + '.';\n      }\n    });\n    fullKey += key;\n    if (parts.length != 0 || key.length === 0) {\n      // returning null instead of throwing to let another plugin process the event\n      return null;\n    }\n    // NOTE: Please don't rewrite this as so, as it will break JSCompiler property renaming.\n    //       The code must remain in the `result['domEventName']` form.\n    // return {domEventName, fullKey};\n    const result = {};\n    result['domEventName'] = domEventName;\n    result['fullKey'] = fullKey;\n    return result;\n  }\n  static getEventFullKey(event) {\n    let fullKey = '';\n    let key = getEventKey(event);\n    key = key.toLowerCase();\n    if (key === ' ') {\n      key = 'space'; // for readability\n    } else if (key === '.') {\n      key = 'dot'; // because '.' is used as a separator in event names\n    }\n\n    MODIFIER_KEYS.forEach(modifierName => {\n      if (modifierName != key) {\n        const modifierGetter = MODIFIER_KEY_GETTERS[modifierName];\n        if (modifierGetter(event)) {\n          fullKey += modifierName + '.';\n        }\n      }\n    });\n    fullKey += key;\n    return fullKey;\n  }\n  /**\n   * Configures a handler callback for a key event.\n   * @param fullKey The event name that combines all simultaneous keystrokes.\n   * @param handler The function that responds to the key event.\n   * @param zone The zone in which the event occurred.\n   * @returns A callback function.\n   */\n  static eventCallback(fullKey, handler, zone) {\n    return (event /** TODO #9100 */) => {\n      if (KeyEventsPlugin.getEventFullKey(event) === fullKey) {\n        zone.runGuarded(() => handler(event));\n      }\n    };\n  }\n  /** @internal */\n  static _normalizeKey(keyName) {\n    // TODO: switch to a Map if the mapping grows too much\n    switch (keyName) {\n      case 'esc':\n        return 'escape';\n      default:\n        return keyName;\n    }\n  }\n}\nKeyEventsPlugin.ɵfac = function KeyEventsPlugin_Factory(t) {\n  return new (t || KeyEventsPlugin)(ɵngcc0.ɵɵinject(DOCUMENT));\n};\nKeyEventsPlugin.ɵprov = /*@__PURE__*/ɵngcc0.ɵɵdefineInjectable({\n  token: KeyEventsPlugin,\n  factory: KeyEventsPlugin.ɵfac\n});\nKeyEventsPlugin.ctorParameters = () => [{\n  type: undefined,\n  decorators: [{\n    type: Inject,\n    args: [DOCUMENT]\n  }]\n}];\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(KeyEventsPlugin, [{\n    type: Injectable\n  }], function () {\n    return [{\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [DOCUMENT]\n      }]\n    }];\n  }, null);\n})();\nfunction getEventKey(event) {\n  let key = event.key;\n  if (key == null) {\n    key = event.keyIdentifier;\n    // keyIdentifier is defined in the old draft of DOM Level 3 Events implemented by Chrome and\n    // Safari cf\n    // https://www.w3.org/TR/2007/WD-DOM-Level-3-Events-20071221/events.html#Events-KeyboardEvents-Interfaces\n    if (key == null) {\n      return 'Unidentified';\n    }\n    if (key.startsWith('U+')) {\n      key = String.fromCharCode(parseInt(key.substring(2), 16));\n      if (event.location === DOM_KEY_LOCATION_NUMPAD && _chromeNumKeyPadMap.hasOwnProperty(key)) {\n        // There is a bug in Chrome for numeric keypad keys:\n        // https://code.google.com/p/chromium/issues/detail?id=155654\n        // 1, 2, 3 ... are reported as A, B, C ...\n        key = _chromeNumKeyPadMap[key];\n      }\n    }\n  }\n  return _keyMap[key] || key;\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * DomSanitizer helps preventing Cross Site Scripting Security bugs (XSS) by sanitizing\n * values to be safe to use in the different DOM contexts.\n *\n * For example, when binding a URL in an `<a [href]=\"someValue\">` hyperlink, `someValue` will be\n * sanitized so that an attacker cannot inject e.g. a `javascript:` URL that would execute code on\n * the website.\n *\n * In specific situations, it might be necessary to disable sanitization, for example if the\n * application genuinely needs to produce a `javascript:` style link with a dynamic value in it.\n * Users can bypass security by constructing a value with one of the `bypassSecurityTrust...`\n * methods, and then binding to that value from the template.\n *\n * These situations should be very rare, and extraordinary care must be taken to avoid creating a\n * Cross Site Scripting (XSS) security bug!\n *\n * When using `bypassSecurityTrust...`, make sure to call the method as early as possible and as\n * close as possible to the source of the value, to make it easy to verify no security bug is\n * created by its use.\n *\n * It is not required (and not recommended) to bypass security if the value is safe, e.g. a URL that\n * does not start with a suspicious protocol, or an HTML snippet that does not contain dangerous\n * code. The sanitizer leaves safe values intact.\n *\n * @security Calling any of the `bypassSecurityTrust...` APIs disables Angular's built-in\n * sanitization for the value passed in. Carefully check and audit all values and code paths going\n * into this call. Make sure any user data is appropriately escaped for this security context.\n * For more detail, see the [Security Guide](https://g.co/ng/security).\n *\n * @publicApi\n */\nclass DomSanitizer {}\nDomSanitizer.ɵfac = function DomSanitizer_Factory(t) {\n  return new (t || DomSanitizer)();\n};\nDomSanitizer.ɵprov = ɵɵdefineInjectable({\n  factory: function DomSanitizer_Factory() {\n    return ɵɵinject(DomSanitizerImpl);\n  },\n  token: DomSanitizer,\n  providedIn: \"root\"\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(DomSanitizer, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root',\n      useExisting: forwardRef(() => DomSanitizerImpl)\n    }]\n  }], null, null);\n})();\nfunction domSanitizerImplFactory(injector) {\n  return new DomSanitizerImpl(injector.get(DOCUMENT));\n}\nclass DomSanitizerImpl extends DomSanitizer {\n  constructor(_doc) {\n    super();\n    this._doc = _doc;\n  }\n  sanitize(ctx, value) {\n    if (value == null) return null;\n    switch (ctx) {\n      case SecurityContext.NONE:\n        return value;\n      case SecurityContext.HTML:\n        if (ɵallowSanitizationBypassAndThrow(value, \"HTML\" /* Html */)) {\n          return ɵunwrapSafeValue(value);\n        }\n        return ɵ_sanitizeHtml(this._doc, String(value)).toString();\n      case SecurityContext.STYLE:\n        if (ɵallowSanitizationBypassAndThrow(value, \"Style\" /* Style */)) {\n          return ɵunwrapSafeValue(value);\n        }\n        return value;\n      case SecurityContext.SCRIPT:\n        if (ɵallowSanitizationBypassAndThrow(value, \"Script\" /* Script */)) {\n          return ɵunwrapSafeValue(value);\n        }\n        throw new Error('unsafe value used in a script context');\n      case SecurityContext.URL:\n        const type = ɵgetSanitizationBypassType(value);\n        if (ɵallowSanitizationBypassAndThrow(value, \"URL\" /* Url */)) {\n          return ɵunwrapSafeValue(value);\n        }\n        return ɵ_sanitizeUrl(String(value));\n      case SecurityContext.RESOURCE_URL:\n        if (ɵallowSanitizationBypassAndThrow(value, \"ResourceURL\" /* ResourceUrl */)) {\n          return ɵunwrapSafeValue(value);\n        }\n        throw new Error('unsafe value used in a resource URL context (see https://g.co/ng/security#xss)');\n      default:\n        throw new Error(`Unexpected SecurityContext ${ctx} (see https://g.co/ng/security#xss)`);\n    }\n  }\n  bypassSecurityTrustHtml(value) {\n    return ɵbypassSanitizationTrustHtml(value);\n  }\n  bypassSecurityTrustStyle(value) {\n    return ɵbypassSanitizationTrustStyle(value);\n  }\n  bypassSecurityTrustScript(value) {\n    return ɵbypassSanitizationTrustScript(value);\n  }\n  bypassSecurityTrustUrl(value) {\n    return ɵbypassSanitizationTrustUrl(value);\n  }\n  bypassSecurityTrustResourceUrl(value) {\n    return ɵbypassSanitizationTrustResourceUrl(value);\n  }\n}\nDomSanitizerImpl.ɵfac = function DomSanitizerImpl_Factory(t) {\n  return new (t || DomSanitizerImpl)(ɵngcc0.ɵɵinject(DOCUMENT));\n};\nDomSanitizerImpl.ɵprov = ɵɵdefineInjectable({\n  factory: function DomSanitizerImpl_Factory() {\n    return domSanitizerImplFactory(ɵɵinject(INJECTOR));\n  },\n  token: DomSanitizerImpl,\n  providedIn: \"root\"\n});\nDomSanitizerImpl.ctorParameters = () => [{\n  type: undefined,\n  decorators: [{\n    type: Inject,\n    args: [DOCUMENT]\n  }]\n}];\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(DomSanitizerImpl, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root',\n      useFactory: domSanitizerImplFactory,\n      deps: [Injector]\n    }]\n  }], function () {\n    return [{\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [DOCUMENT]\n      }]\n    }];\n  }, null);\n})();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction initDomAdapter() {\n  BrowserDomAdapter.makeCurrent();\n  BrowserGetTestability.init();\n}\nfunction errorHandler() {\n  return new ErrorHandler();\n}\nfunction _document() {\n  // Tell ivy about the global document\n  ɵsetDocument(document);\n  return document;\n}\nconst ɵ0$3 = ɵPLATFORM_BROWSER_ID;\nconst INTERNAL_BROWSER_PLATFORM_PROVIDERS = [{\n  provide: PLATFORM_ID,\n  useValue: ɵ0$3\n}, {\n  provide: PLATFORM_INITIALIZER,\n  useValue: initDomAdapter,\n  multi: true\n}, {\n  provide: DOCUMENT,\n  useFactory: _document,\n  deps: []\n}];\nconst BROWSER_SANITIZATION_PROVIDERS__PRE_R3__ = [{\n  provide: Sanitizer,\n  useExisting: DomSanitizer\n}, {\n  provide: DomSanitizer,\n  useClass: DomSanitizerImpl,\n  deps: [DOCUMENT]\n}];\nconst BROWSER_SANITIZATION_PROVIDERS__POST_R3__ = [];\n/**\n * @security Replacing built-in sanitization providers exposes the application to XSS risks.\n * Attacker-controlled data introduced by an unsanitized provider could expose your\n * application to XSS risks. For more detail, see the [Security Guide](https://g.co/ng/security).\n * @publicApi\n */\nconst BROWSER_SANITIZATION_PROVIDERS = BROWSER_SANITIZATION_PROVIDERS__PRE_R3__;\n/**\n * A factory function that returns a `PlatformRef` instance associated with browser service\n * providers.\n *\n * @publicApi\n */\nconst platformBrowser = createPlatformFactory(platformCore, 'browser', INTERNAL_BROWSER_PLATFORM_PROVIDERS);\nconst BROWSER_MODULE_PROVIDERS = [BROWSER_SANITIZATION_PROVIDERS, {\n  provide: ɵINJECTOR_SCOPE,\n  useValue: 'root'\n}, {\n  provide: ErrorHandler,\n  useFactory: errorHandler,\n  deps: []\n}, {\n  provide: EVENT_MANAGER_PLUGINS,\n  useClass: DomEventsPlugin,\n  multi: true,\n  deps: [DOCUMENT, NgZone, PLATFORM_ID]\n}, {\n  provide: EVENT_MANAGER_PLUGINS,\n  useClass: KeyEventsPlugin,\n  multi: true,\n  deps: [DOCUMENT]\n}, HAMMER_PROVIDERS, {\n  provide: DomRendererFactory2,\n  useClass: DomRendererFactory2,\n  deps: [EventManager, DomSharedStylesHost, APP_ID]\n}, {\n  provide: RendererFactory2,\n  useExisting: DomRendererFactory2\n}, {\n  provide: SharedStylesHost,\n  useExisting: DomSharedStylesHost\n}, {\n  provide: DomSharedStylesHost,\n  useClass: DomSharedStylesHost,\n  deps: [DOCUMENT]\n}, {\n  provide: Testability,\n  useClass: Testability,\n  deps: [NgZone]\n}, {\n  provide: EventManager,\n  useClass: EventManager,\n  deps: [EVENT_MANAGER_PLUGINS, NgZone]\n}, {\n  provide: XhrFactory,\n  useClass: BrowserXhr,\n  deps: []\n}, ELEMENT_PROBE_PROVIDERS];\n/**\n * Exports required infrastructure for all Angular apps.\n * Included by default in all Angular apps created with the CLI\n * `new` command.\n * Re-exports `CommonModule` and `ApplicationModule`, making their\n * exports and providers available to all apps.\n *\n * @publicApi\n */\nclass BrowserModule {\n  constructor(parentModule) {\n    if (parentModule) {\n      throw new Error(`BrowserModule has already been loaded. If you need access to common directives such as NgIf and NgFor from a lazy loaded module, import CommonModule instead.`);\n    }\n  }\n  /**\n   * Configures a browser-based app to transition from a server-rendered app, if\n   * one is present on the page.\n   *\n   * @param params An object containing an identifier for the app to transition.\n   * The ID must match between the client and server versions of the app.\n   * @returns The reconfigured `BrowserModule` to import into the app's root `AppModule`.\n   */\n  static withServerTransition(params) {\n    return {\n      ngModule: BrowserModule,\n      providers: [{\n        provide: APP_ID,\n        useValue: params.appId\n      }, {\n        provide: TRANSITION_ID,\n        useExisting: APP_ID\n      }, SERVER_TRANSITION_PROVIDERS]\n    };\n  }\n}\nBrowserModule.ɵfac = function BrowserModule_Factory(t) {\n  return new (t || BrowserModule)(ɵngcc0.ɵɵinject(BrowserModule, 12));\n};\nBrowserModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n  type: BrowserModule\n});\nBrowserModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({\n  providers: BROWSER_MODULE_PROVIDERS,\n  imports: [CommonModule, ApplicationModule]\n});\nBrowserModule.ctorParameters = () => [{\n  type: BrowserModule,\n  decorators: [{\n    type: Optional\n  }, {\n    type: SkipSelf\n  }, {\n    type: Inject,\n    args: [BrowserModule]\n  }]\n}];\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(BrowserModule, [{\n    type: NgModule,\n    args: [{\n      providers: BROWSER_MODULE_PROVIDERS,\n      exports: [CommonModule, ApplicationModule]\n    }]\n  }], function () {\n    return [{\n      type: BrowserModule,\n      decorators: [{\n        type: Optional\n      }, {\n        type: SkipSelf\n      }, {\n        type: Inject,\n        args: [BrowserModule]\n      }]\n    }];\n  }, null);\n})();\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(BrowserModule, {\n    exports: function () {\n      return [CommonModule, ApplicationModule];\n    }\n  });\n})();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Factory to create a `Meta` service instance for the current DOM document.\n */\nfunction createMeta() {\n  return new Meta(ɵɵinject(DOCUMENT));\n}\n/**\n * A service for managing HTML `<meta>` tags.\n *\n * Properties of the `MetaDefinition` object match the attributes of the\n * HTML `<meta>` tag. These tags define document metadata that is important for\n * things like configuring a Content Security Policy, defining browser compatibility\n * and security settings, setting HTTP Headers, defining rich content for social sharing,\n * and Search Engine Optimization (SEO).\n *\n * To identify specific `<meta>` tags in a document, use an attribute selection\n * string in the format `\"tag_attribute='value string'\"`.\n * For example, an `attrSelector` value of `\"name='description'\"` matches a tag\n * whose `name` attribute has the value `\"description\"`.\n * Selectors are used with the `querySelector()` Document method,\n * in the format `meta[{attrSelector}]`.\n *\n * @see [HTML meta tag](https://developer.mozilla.org/docs/Web/HTML/Element/meta)\n * @see [Document.querySelector()](https://developer.mozilla.org/docs/Web/API/Document/querySelector)\n *\n *\n * @publicApi\n */\nclass Meta {\n  constructor(_doc) {\n    this._doc = _doc;\n    this._dom = ɵgetDOM();\n  }\n  /**\n   * Retrieves or creates a specific `<meta>` tag element in the current HTML document.\n   * In searching for an existing tag, Angular attempts to match the `name` or `property` attribute\n   * values in the provided tag definition, and verifies that all other attribute values are equal.\n   * If an existing element is found, it is returned and is not modified in any way.\n   * @param tag The definition of a `<meta>` element to match or create.\n   * @param forceCreation True to create a new element without checking whether one already exists.\n   * @returns The existing element with the same attributes and values if found,\n   * the new element if no match is found, or `null` if the tag parameter is not defined.\n   */\n  addTag(tag, forceCreation = false) {\n    if (!tag) return null;\n    return this._getOrCreateElement(tag, forceCreation);\n  }\n  /**\n   * Retrieves or creates a set of `<meta>` tag elements in the current HTML document.\n   * In searching for an existing tag, Angular attempts to match the `name` or `property` attribute\n   * values in the provided tag definition, and verifies that all other attribute values are equal.\n   * @param tags An array of tag definitions to match or create.\n   * @param forceCreation True to create new elements without checking whether they already exist.\n   * @returns The matching elements if found, or the new elements.\n   */\n  addTags(tags, forceCreation = false) {\n    if (!tags) return [];\n    return tags.reduce((result, tag) => {\n      if (tag) {\n        result.push(this._getOrCreateElement(tag, forceCreation));\n      }\n      return result;\n    }, []);\n  }\n  /**\n   * Retrieves a `<meta>` tag element in the current HTML document.\n   * @param attrSelector The tag attribute and value to match against, in the format\n   * `\"tag_attribute='value string'\"`.\n   * @returns The matching element, if any.\n   */\n  getTag(attrSelector) {\n    if (!attrSelector) return null;\n    return this._doc.querySelector(`meta[${attrSelector}]`) || null;\n  }\n  /**\n   * Retrieves a set of `<meta>` tag elements in the current HTML document.\n   * @param attrSelector The tag attribute and value to match against, in the format\n   * `\"tag_attribute='value string'\"`.\n   * @returns The matching elements, if any.\n   */\n  getTags(attrSelector) {\n    if (!attrSelector) return [];\n    const list /*NodeList*/ = this._doc.querySelectorAll(`meta[${attrSelector}]`);\n    return list ? [].slice.call(list) : [];\n  }\n  /**\n   * Modifies an existing `<meta>` tag element in the current HTML document.\n   * @param tag The tag description with which to replace the existing tag content.\n   * @param selector A tag attribute and value to match against, to identify\n   * an existing tag. A string in the format `\"tag_attribute=`value string`\"`.\n   * If not supplied, matches a tag with the same `name` or `property` attribute value as the\n   * replacement tag.\n   * @return The modified element.\n   */\n  updateTag(tag, selector) {\n    if (!tag) return null;\n    selector = selector || this._parseSelector(tag);\n    const meta = this.getTag(selector);\n    if (meta) {\n      return this._setMetaElementAttributes(tag, meta);\n    }\n    return this._getOrCreateElement(tag, true);\n  }\n  /**\n   * Removes an existing `<meta>` tag element from the current HTML document.\n   * @param attrSelector A tag attribute and value to match against, to identify\n   * an existing tag. A string in the format `\"tag_attribute=`value string`\"`.\n   */\n  removeTag(attrSelector) {\n    this.removeTagElement(this.getTag(attrSelector));\n  }\n  /**\n   * Removes an existing `<meta>` tag element from the current HTML document.\n   * @param meta The tag definition to match against to identify an existing tag.\n   */\n  removeTagElement(meta) {\n    if (meta) {\n      this._dom.remove(meta);\n    }\n  }\n  _getOrCreateElement(meta, forceCreation = false) {\n    if (!forceCreation) {\n      const selector = this._parseSelector(meta);\n      // It's allowed to have multiple elements with the same name so it's not enough to\n      // just check that element with the same name already present on the page. We also need to\n      // check if element has tag attributes\n      const elem = this.getTags(selector).filter(elem => this._containsAttributes(meta, elem))[0];\n      if (elem !== undefined) return elem;\n    }\n    const element = this._dom.createElement('meta');\n    this._setMetaElementAttributes(meta, element);\n    const head = this._doc.getElementsByTagName('head')[0];\n    head.appendChild(element);\n    return element;\n  }\n  _setMetaElementAttributes(tag, el) {\n    Object.keys(tag).forEach(prop => el.setAttribute(this._getMetaKeyMap(prop), tag[prop]));\n    return el;\n  }\n  _parseSelector(tag) {\n    const attr = tag.name ? 'name' : 'property';\n    return `${attr}=\"${tag[attr]}\"`;\n  }\n  _containsAttributes(tag, elem) {\n    return Object.keys(tag).every(key => elem.getAttribute(this._getMetaKeyMap(key)) === tag[key]);\n  }\n  _getMetaKeyMap(prop) {\n    return META_KEYS_MAP[prop] || prop;\n  }\n}\nMeta.ɵfac = function Meta_Factory(t) {\n  return new (t || Meta)(ɵngcc0.ɵɵinject(DOCUMENT));\n};\nMeta.ɵprov = ɵɵdefineInjectable({\n  factory: createMeta,\n  token: Meta,\n  providedIn: \"root\"\n});\nMeta.ctorParameters = () => [{\n  type: undefined,\n  decorators: [{\n    type: Inject,\n    args: [DOCUMENT]\n  }]\n}];\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(Meta, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root',\n      useFactory: createMeta,\n      deps: []\n    }]\n  }], function () {\n    return [{\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [DOCUMENT]\n      }]\n    }];\n  }, null);\n})();\n/**\n * Mapping for MetaDefinition properties with their correct meta attribute names\n */\nconst META_KEYS_MAP = {\n  httpEquiv: 'http-equiv'\n};\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Factory to create Title service.\n */\nfunction createTitle() {\n  return new Title(ɵɵinject(DOCUMENT));\n}\n/**\n * A service that can be used to get and set the title of a current HTML document.\n *\n * Since an Angular application can't be bootstrapped on the entire HTML document (`<html>` tag)\n * it is not possible to bind to the `text` property of the `HTMLTitleElement` elements\n * (representing the `<title>` tag). Instead, this service can be used to set and get the current\n * title value.\n *\n * @publicApi\n */\nclass Title {\n  constructor(_doc) {\n    this._doc = _doc;\n  }\n  /**\n   * Get the title of the current HTML document.\n   */\n  getTitle() {\n    return this._doc.title;\n  }\n  /**\n   * Set the title of the current HTML document.\n   * @param newTitle\n   */\n  setTitle(newTitle) {\n    this._doc.title = newTitle || '';\n  }\n}\nTitle.ɵfac = function Title_Factory(t) {\n  return new (t || Title)(ɵngcc0.ɵɵinject(DOCUMENT));\n};\nTitle.ɵprov = ɵɵdefineInjectable({\n  factory: createTitle,\n  token: Title,\n  providedIn: \"root\"\n});\nTitle.ctorParameters = () => [{\n  type: undefined,\n  decorators: [{\n    type: Inject,\n    args: [DOCUMENT]\n  }]\n}];\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(Title, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root',\n      useFactory: createTitle,\n      deps: []\n    }]\n  }], function () {\n    return [{\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [DOCUMENT]\n      }]\n    }];\n  }, null);\n})();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst win = typeof window !== 'undefined' && window || {};\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass ChangeDetectionPerfRecord {\n  constructor(msPerTick, numTicks) {\n    this.msPerTick = msPerTick;\n    this.numTicks = numTicks;\n  }\n}\n/**\n * Entry point for all Angular profiling-related debug tools. This object\n * corresponds to the `ng.profiler` in the dev console.\n */\nclass AngularProfiler {\n  constructor(ref) {\n    this.appRef = ref.injector.get(ApplicationRef);\n  }\n  // tslint:disable:no-console\n  /**\n   * Exercises change detection in a loop and then prints the average amount of\n   * time in milliseconds how long a single round of change detection takes for\n   * the current state of the UI. It runs a minimum of 5 rounds for a minimum\n   * of 500 milliseconds.\n   *\n   * Optionally, a user may pass a `config` parameter containing a map of\n   * options. Supported options are:\n   *\n   * `record` (boolean) - causes the profiler to record a CPU profile while\n   * it exercises the change detector. Example:\n   *\n   * ```\n   * ng.profiler.timeChangeDetection({record: true})\n   * ```\n   */\n  timeChangeDetection(config) {\n    const record = config && config['record'];\n    const profileName = 'Change Detection';\n    // Profiler is not available in Android browsers without dev tools opened\n    const isProfilerAvailable = win.console.profile != null;\n    if (record && isProfilerAvailable) {\n      win.console.profile(profileName);\n    }\n    const start = performanceNow();\n    let numTicks = 0;\n    while (numTicks < 5 || performanceNow() - start < 500) {\n      this.appRef.tick();\n      numTicks++;\n    }\n    const end = performanceNow();\n    if (record && isProfilerAvailable) {\n      win.console.profileEnd(profileName);\n    }\n    const msPerTick = (end - start) / numTicks;\n    win.console.log(`ran ${numTicks} change detection cycles`);\n    win.console.log(`${msPerTick.toFixed(2)} ms per check`);\n    return new ChangeDetectionPerfRecord(msPerTick, numTicks);\n  }\n}\nfunction performanceNow() {\n  return win.performance && win.performance.now ? win.performance.now() : new Date().getTime();\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst PROFILER_GLOBAL_NAME = 'profiler';\n/**\n * Enabled Angular debug tools that are accessible via your browser's\n * developer console.\n *\n * Usage:\n *\n * 1. Open developer console (e.g. in Chrome Ctrl + Shift + j)\n * 1. Type `ng.` (usually the console will show auto-complete suggestion)\n * 1. Try the change detection profiler `ng.profiler.timeChangeDetection()`\n *    then hit Enter.\n *\n * @publicApi\n */\nfunction enableDebugTools(ref) {\n  exportNgVar(PROFILER_GLOBAL_NAME, new AngularProfiler(ref));\n  return ref;\n}\n/**\n * Disables Angular tools.\n *\n * @publicApi\n */\nfunction disableDebugTools() {\n  exportNgVar(PROFILER_GLOBAL_NAME, null);\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction escapeHtml(text) {\n  const escapedText = {\n    '&': '&a;',\n    '\"': '&q;',\n    '\\'': '&s;',\n    '<': '&l;',\n    '>': '&g;'\n  };\n  return text.replace(/[&\"'<>]/g, s => escapedText[s]);\n}\nfunction unescapeHtml(text) {\n  const unescapedText = {\n    '&a;': '&',\n    '&q;': '\"',\n    '&s;': '\\'',\n    '&l;': '<',\n    '&g;': '>'\n  };\n  return text.replace(/&[^;]+;/g, s => unescapedText[s]);\n}\n/**\n * Create a `StateKey<T>` that can be used to store value of type T with `TransferState`.\n *\n * Example:\n *\n * ```\n * const COUNTER_KEY = makeStateKey<number>('counter');\n * let value = 10;\n *\n * transferState.set(COUNTER_KEY, value);\n * ```\n *\n * @publicApi\n */\nfunction makeStateKey(key) {\n  return key;\n}\n/**\n * A key value store that is transferred from the application on the server side to the application\n * on the client side.\n *\n * `TransferState` will be available as an injectable token. To use it import\n * `ServerTransferStateModule` on the server and `BrowserTransferStateModule` on the client.\n *\n * The values in the store are serialized/deserialized using JSON.stringify/JSON.parse. So only\n * boolean, number, string, null and non-class objects will be serialized and deserialized in a\n * non-lossy manner.\n *\n * @publicApi\n */\nclass TransferState {\n  constructor() {\n    this.store = {};\n    this.onSerializeCallbacks = {};\n  }\n  /** @internal */\n  static init(initState) {\n    const transferState = new TransferState();\n    transferState.store = initState;\n    return transferState;\n  }\n  /**\n   * Get the value corresponding to a key. Return `defaultValue` if key is not found.\n   */\n  get(key, defaultValue) {\n    return this.store[key] !== undefined ? this.store[key] : defaultValue;\n  }\n  /**\n   * Set the value corresponding to a key.\n   */\n  set(key, value) {\n    this.store[key] = value;\n  }\n  /**\n   * Remove a key from the store.\n   */\n  remove(key) {\n    delete this.store[key];\n  }\n  /**\n   * Test whether a key exists in the store.\n   */\n  hasKey(key) {\n    return this.store.hasOwnProperty(key);\n  }\n  /**\n   * Register a callback to provide the value for a key when `toJson` is called.\n   */\n  onSerialize(key, callback) {\n    this.onSerializeCallbacks[key] = callback;\n  }\n  /**\n   * Serialize the current state of the store to JSON.\n   */\n  toJson() {\n    // Call the onSerialize callbacks and put those values into the store.\n    for (const key in this.onSerializeCallbacks) {\n      if (this.onSerializeCallbacks.hasOwnProperty(key)) {\n        try {\n          this.store[key] = this.onSerializeCallbacks[key]();\n        } catch (e) {\n          console.warn('Exception in onSerialize callback: ', e);\n        }\n      }\n    }\n    return JSON.stringify(this.store);\n  }\n}\nTransferState.ɵfac = function TransferState_Factory(t) {\n  return new (t || TransferState)();\n};\nTransferState.ɵprov = /*@__PURE__*/ɵngcc0.ɵɵdefineInjectable({\n  token: TransferState,\n  factory: TransferState.ɵfac\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(TransferState, [{\n    type: Injectable\n  }], function () {\n    return [];\n  }, null);\n})();\nfunction initTransferState(doc, appId) {\n  // Locate the script tag with the JSON data transferred from the server.\n  // The id of the script tag is set to the Angular appId + 'state'.\n  const script = doc.getElementById(appId + '-state');\n  let initialState = {};\n  if (script && script.textContent) {\n    try {\n      // Avoid using any here as it triggers lint errors in google3 (any is not allowed).\n      initialState = JSON.parse(unescapeHtml(script.textContent));\n    } catch (e) {\n      console.warn('Exception while restoring TransferState for app ' + appId, e);\n    }\n  }\n  return TransferState.init(initialState);\n}\n/**\n * NgModule to install on the client side while using the `TransferState` to transfer state from\n * server to client.\n *\n * @publicApi\n */\nclass BrowserTransferStateModule {}\nBrowserTransferStateModule.ɵfac = function BrowserTransferStateModule_Factory(t) {\n  return new (t || BrowserTransferStateModule)();\n};\nBrowserTransferStateModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n  type: BrowserTransferStateModule\n});\nBrowserTransferStateModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({\n  providers: [{\n    provide: TransferState,\n    useFactory: initTransferState,\n    deps: [DOCUMENT, APP_ID]\n  }]\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(BrowserTransferStateModule, [{\n    type: NgModule,\n    args: [{\n      providers: [{\n        provide: TransferState,\n        useFactory: initTransferState,\n        deps: [DOCUMENT, APP_ID]\n      }]\n    }]\n  }], null, null);\n})();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Predicates for use with {@link DebugElement}'s query functions.\n *\n * @publicApi\n */\nclass By {\n  /**\n   * Match all nodes.\n   *\n   * @usageNotes\n   * ### Example\n   *\n   * {@example platform-browser/dom/debug/ts/by/by.ts region='by_all'}\n   */\n  static all() {\n    return () => true;\n  }\n  /**\n   * Match elements by the given CSS selector.\n   *\n   * @usageNotes\n   * ### Example\n   *\n   * {@example platform-browser/dom/debug/ts/by/by.ts region='by_css'}\n   */\n  static css(selector) {\n    return debugElement => {\n      return debugElement.nativeElement != null ? elementMatches(debugElement.nativeElement, selector) : false;\n    };\n  }\n  /**\n   * Match nodes that have the given directive present.\n   *\n   * @usageNotes\n   * ### Example\n   *\n   * {@example platform-browser/dom/debug/ts/by/by.ts region='by_directive'}\n   */\n  static directive(type) {\n    return debugNode => debugNode.providerTokens.indexOf(type) !== -1;\n  }\n}\nfunction elementMatches(n, selector) {\n  if (ɵgetDOM().isElementNode(n)) {\n    return n.matches && n.matches(selector) || n.msMatchesSelector && n.msMatchesSelector(selector) || n.webkitMatchesSelector && n.webkitMatchesSelector(selector);\n  }\n  return false;\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @publicApi\n */\nconst VERSION = new Version('12.2.17');\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// This file only reexports content of the `src` folder. Keep it that way.\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { BrowserModule, BrowserTransferStateModule, By, DomSanitizer, EVENT_MANAGER_PLUGINS, EventManager, HAMMER_GESTURE_CONFIG, HAMMER_LOADER, HammerGestureConfig, HammerModule, Meta, Title, TransferState, VERSION, disableDebugTools, enableDebugTools, makeStateKey, platformBrowser, BROWSER_SANITIZATION_PROVIDERS as ɵBROWSER_SANITIZATION_PROVIDERS, BROWSER_SANITIZATION_PROVIDERS__POST_R3__ as ɵBROWSER_SANITIZATION_PROVIDERS__POST_R3__, BrowserDomAdapter as ɵBrowserDomAdapter, BrowserGetTestability as ɵBrowserGetTestability, DomEventsPlugin as ɵDomEventsPlugin, DomRendererFactory2 as ɵDomRendererFactory2, DomSanitizerImpl as ɵDomSanitizerImpl, DomSharedStylesHost as ɵDomSharedStylesHost, ELEMENT_PROBE_PROVIDERS as ɵELEMENT_PROBE_PROVIDERS, ELEMENT_PROBE_PROVIDERS__POST_R3__ as ɵELEMENT_PROBE_PROVIDERS__POST_R3__, HAMMER_PROVIDERS__POST_R3__ as ɵHAMMER_PROVIDERS__POST_R3__, HammerGesturesPlugin as ɵHammerGesturesPlugin, INTERNAL_BROWSER_PLATFORM_PROVIDERS as ɵINTERNAL_BROWSER_PLATFORM_PROVIDERS, KeyEventsPlugin as ɵKeyEventsPlugin, NAMESPACE_URIS as ɵNAMESPACE_URIS, SharedStylesHost as ɵSharedStylesHost, TRANSITION_ID as ɵTRANSITION_ID, errorHandler as ɵangular_packages_platform_browser_platform_browser_a, _document as ɵangular_packages_platform_browser_platform_browser_b, BROWSER_MODULE_PROVIDERS as ɵangular_packages_platform_browser_platform_browser_c, createMeta as ɵangular_packages_platform_browser_platform_browser_d, createTitle as ɵangular_packages_platform_browser_platform_browser_e, initTransferState as ɵangular_packages_platform_browser_platform_browser_f, EventManagerPlugin as ɵangular_packages_platform_browser_platform_browser_g, HAMMER_PROVIDERS__PRE_R3__ as ɵangular_packages_platform_browser_platform_browser_h, HAMMER_PROVIDERS as ɵangular_packages_platform_browser_platform_browser_i, domSanitizerImplFactory as ɵangular_packages_platform_browser_platform_browser_j, appInitializerFactory as ɵangular_packages_platform_browser_platform_browser_k, SERVER_TRANSITION_PROVIDERS as ɵangular_packages_platform_browser_platform_browser_l, _createNgProbeR2 as ɵangular_packages_platform_browser_platform_browser_m, ELEMENT_PROBE_PROVIDERS__PRE_R3__ as ɵangular_packages_platform_browser_platform_browser_n, BrowserXhr as ɵangular_packages_platform_browser_platform_browser_o, GenericBrowserDomAdapter as ɵangular_packages_platform_browser_platform_browser_p, escapeHtml as ɵescapeHtml, flattenStyles as ɵflattenStyles, initDomAdapter as ɵinitDomAdapter, shimContentAttribute as ɵshimContentAttribute, shimHostAttribute as ɵshimHostAttribute };","map":{"version":3,"names":["ɵDomAdapter","ɵsetRootDomAdapter","ɵparseCookieValue","ɵgetDOM","DOCUMENT","ɵPLATFORM_BROWSER_ID","XhrFactory","CommonModule","ɵngcc0","InjectionToken","ApplicationInitStatus","APP_INITIALIZER","Injector","setTestabilityGetter","ɵglobal","Injectable","ApplicationRef","NgZone","ɵgetDebugNodeR2","NgProbeToken","Optional","Inject","ViewEncapsulation","APP_ID","RendererStyleFlags2","ɵConsole","NgModule","ɵɵdefineInjectable","ɵɵinject","forwardRef","SecurityContext","ɵallowSanitizationBypassAndThrow","ɵunwrapSafeValue","ɵgetSanitizationBypassType","ɵ_sanitizeUrl","ɵ_sanitizeHtml","ɵbypassSanitizationTrustHtml","ɵbypassSanitizationTrustStyle","ɵbypassSanitizationTrustScript","ɵbypassSanitizationTrustUrl","ɵbypassSanitizationTrustResourceUrl","INJECTOR","ErrorHandler","ɵsetDocument","PLATFORM_ID","PLATFORM_INITIALIZER","Sanitizer","createPlatformFactory","platformCore","ɵINJECTOR_SCOPE","RendererFactory2","Testability","ApplicationModule","SkipSelf","Version","GenericBrowserDomAdapter","constructor","arguments","supportsDOMEvents","BrowserDomAdapter","makeCurrent","onAndCancel","el","evt","listener","addEventListener","removeEventListener","dispatchEvent","remove","node","parentNode","removeChild","createElement","tagName","doc","getDefaultDocument","createHtmlDocument","document","implementation","createHTMLDocument","isElementNode","nodeType","Node","ELEMENT_NODE","isShadowRoot","DocumentFragment","getGlobalEventTarget","target","window","body","getBaseHref","href","getBaseElementHref","relativePath","resetBaseElement","baseElement","getUserAgent","navigator","userAgent","getCookie","name","cookie","querySelector","getAttribute","urlParsingNode","url","setAttribute","pathName","pathname","charAt","TRANSITION_ID","appInitializerFactory","transitionId","injector","get","donePromise","then","dom","styles","querySelectorAll","i","length","SERVER_TRANSITION_PROVIDERS","provide","useFactory","deps","multi","BrowserGetTestability","init","addToWindow","registry","elem","findInAncestors","testability","findTestabilityInTree","Error","getAllTestabilities","getAllRootElements","whenAllStable","callback","testabilities","count","didWork","decrement","didWork_","forEach","whenStable","push","t","getTestability","host","parentElement","BrowserXhr","build","XMLHttpRequest","ɵfac","BrowserXhr_Factory","ɵprov","token","factory","ngDevMode","ɵsetClassMetadata","type","CAMEL_CASE_REGEXP","DASH_CASE_REGEXP","camelCaseToDashCase","input","replace","m","toLowerCase","dashCaseToCamelCase","toUpperCase","exportNgVar","value","COMPILED","ng","ɵ0","CORE_TOKENS","INSPECT_GLOBAL_NAME","CORE_TOKENS_GLOBAL_NAME","inspectNativeElementR2","element","_createNgProbeR2","coreTokens","Object","assign","_ngProbeTokensToMap","tokens","reduce","prev","ELEMENT_PROBE_PROVIDERS__POST_R3__","ELEMENT_PROBE_PROVIDERS__PRE_R3__","ELEMENT_PROBE_PROVIDERS","EVENT_MANAGER_PLUGINS","EventManager","plugins","_zone","_eventNameToPlugin","Map","p","manager","_plugins","slice","reverse","eventName","handler","plugin","_findPluginFor","addGlobalEventListener","getZone","supports","set","EventManager_Factory","ctorParameters","Array","decorators","args","EventManagerPlugin","_doc","SharedStylesHost","_stylesSet","Set","addStyles","additions","style","has","add","onStylesAdded","getAllStyles","from","SharedStylesHost_Factory","DomSharedStylesHost","_hostNodes","head","_addStylesToHost","styleNodes","styleEl","textContent","appendChild","addHost","hostNode","removeHost","removeStyle","delete","ngOnDestroy","DomSharedStylesHost_Factory","undefined","styleNode","NAMESPACE_URIS","COMPONENT_REGEX","NG_DEV_MODE","COMPONENT_VARIABLE","HOST_ATTR","CONTENT_ATTR","shimContentAttribute","componentShortId","shimHostAttribute","flattenStyles","compId","isArray","decoratePreventDefault","eventHandler","event","allowDefaultBehavior","preventDefault","returnValue","hasLoggedNativeEncapsulationWarning","DomRendererFactory2","eventManager","sharedStylesHost","appId","rendererByCompId","defaultRenderer","DefaultDomRenderer2","createRenderer","encapsulation","Emulated","renderer","id","EmulatedEncapsulationDomRenderer2","applyToHost","ShadowDom","console","warn","ShadowDomRenderer","begin","end","DomRendererFactory2_Factory","String","data","create","destroy","namespace","createElementNS","createComment","createText","createTextNode","parent","newChild","insertBefore","refChild","oldChild","selectRootElement","selectorOrNode","preserveContent","nextSibling","namespaceUri","setAttributeNS","removeAttribute","removeAttributeNS","addClass","classList","removeClass","setStyle","flags","DashCase","Important","setProperty","removeProperty","checkNoSyntheticProp","setValue","nodeValue","listen","ɵ0$1","charCodeAt","AT_CHARCODE","nameKind","component","contentAttr","hostAttr","hostEl","shadowRoot","attachShadow","mode","nodeOrShadowRoot","DomEventsPlugin","DomEventsPlugin_Factory","EVENT_NAMES","HAMMER_GESTURE_CONFIG","HAMMER_LOADER","HammerGestureConfig","events","overrides","buildHammer","mc","Hammer","options","enable","HammerGestureConfig_Factory","HammerGesturesPlugin","_config","loader","_loaderPromise","hasOwnProperty","isCustomEvent","zone","cancelRegistration","deregister","catch","runOutsideAngular","eventObj","runGuarded","on","off","indexOf","HammerGesturesPlugin_Factory","HAMMER_PROVIDERS__POST_R3__","HAMMER_PROVIDERS__PRE_R3__","useClass","HAMMER_PROVIDERS","HammerModule","HammerModule_Factory","ɵmod","ɵɵdefineNgModule","ɵinj","ɵɵdefineInjector","providers","MODIFIER_KEYS","DOM_KEY_LOCATION_NUMPAD","_keyMap","_chromeNumKeyPadMap","ɵ0$2","altKey","ɵ1","ctrlKey","ɵ2","metaKey","ɵ3","shiftKey","MODIFIER_KEY_GETTERS","KeyEventsPlugin","parseEventName","parsedEvent","outsideHandler","eventCallback","parts","split","domEventName","shift","key","_normalizeKey","pop","fullKey","modifierName","index","splice","result","getEventFullKey","getEventKey","modifierGetter","keyName","KeyEventsPlugin_Factory","keyIdentifier","startsWith","fromCharCode","parseInt","substring","location","DomSanitizer","DomSanitizer_Factory","DomSanitizerImpl","providedIn","useExisting","domSanitizerImplFactory","sanitize","ctx","NONE","HTML","toString","STYLE","SCRIPT","URL","RESOURCE_URL","bypassSecurityTrustHtml","bypassSecurityTrustStyle","bypassSecurityTrustScript","bypassSecurityTrustUrl","bypassSecurityTrustResourceUrl","DomSanitizerImpl_Factory","initDomAdapter","errorHandler","_document","ɵ0$3","INTERNAL_BROWSER_PLATFORM_PROVIDERS","useValue","BROWSER_SANITIZATION_PROVIDERS__PRE_R3__","BROWSER_SANITIZATION_PROVIDERS__POST_R3__","BROWSER_SANITIZATION_PROVIDERS","platformBrowser","BROWSER_MODULE_PROVIDERS","BrowserModule","parentModule","withServerTransition","params","ngModule","BrowserModule_Factory","imports","exports","ngJitMode","ɵɵsetNgModuleScope","createMeta","Meta","_dom","addTag","tag","forceCreation","_getOrCreateElement","addTags","tags","getTag","attrSelector","getTags","list","call","updateTag","selector","_parseSelector","meta","_setMetaElementAttributes","removeTag","removeTagElement","filter","_containsAttributes","getElementsByTagName","keys","prop","_getMetaKeyMap","attr","every","META_KEYS_MAP","Meta_Factory","httpEquiv","createTitle","Title","getTitle","title","setTitle","newTitle","Title_Factory","win","ChangeDetectionPerfRecord","msPerTick","numTicks","AngularProfiler","ref","appRef","timeChangeDetection","config","record","profileName","isProfilerAvailable","profile","start","performanceNow","tick","profileEnd","log","toFixed","performance","now","Date","getTime","PROFILER_GLOBAL_NAME","enableDebugTools","disableDebugTools","escapeHtml","text","escapedText","s","unescapeHtml","unescapedText","makeStateKey","TransferState","store","onSerializeCallbacks","initState","transferState","defaultValue","hasKey","onSerialize","toJson","e","JSON","stringify","TransferState_Factory","initTransferState","script","getElementById","initialState","parse","BrowserTransferStateModule","BrowserTransferStateModule_Factory","By","all","css","debugElement","nativeElement","elementMatches","directive","debugNode","providerTokens","n","matches","msMatchesSelector","webkitMatchesSelector","VERSION","ɵBROWSER_SANITIZATION_PROVIDERS","ɵBROWSER_SANITIZATION_PROVIDERS__POST_R3__","ɵBrowserDomAdapter","ɵBrowserGetTestability","ɵDomEventsPlugin","ɵDomRendererFactory2","ɵDomSanitizerImpl","ɵDomSharedStylesHost","ɵELEMENT_PROBE_PROVIDERS","ɵELEMENT_PROBE_PROVIDERS__POST_R3__","ɵHAMMER_PROVIDERS__POST_R3__","ɵHammerGesturesPlugin","ɵINTERNAL_BROWSER_PLATFORM_PROVIDERS","ɵKeyEventsPlugin","ɵNAMESPACE_URIS","ɵSharedStylesHost","ɵTRANSITION_ID","ɵangular_packages_platform_browser_platform_browser_a","ɵangular_packages_platform_browser_platform_browser_b","ɵangular_packages_platform_browser_platform_browser_c","ɵangular_packages_platform_browser_platform_browser_d","ɵangular_packages_platform_browser_platform_browser_e","ɵangular_packages_platform_browser_platform_browser_f","ɵangular_packages_platform_browser_platform_browser_g","ɵangular_packages_platform_browser_platform_browser_h","ɵangular_packages_platform_browser_platform_browser_i","ɵangular_packages_platform_browser_platform_browser_j","ɵangular_packages_platform_browser_platform_browser_k","ɵangular_packages_platform_browser_platform_browser_l","ɵangular_packages_platform_browser_platform_browser_m","ɵangular_packages_platform_browser_platform_browser_n","ɵangular_packages_platform_browser_platform_browser_o","ɵangular_packages_platform_browser_platform_browser_p","ɵescapeHtml","ɵflattenStyles","ɵinitDomAdapter","ɵshimContentAttribute","ɵshimHostAttribute"],"sources":["C:/projects/ANGULAR/Barista-matic-main/node_modules/@angular/platform-browser/__ivy_ngcc__/fesm2015/platform-browser.js"],"sourcesContent":["/**\n * @license Angular v12.2.17\n * (c) 2010-2021 Google LLC. https://angular.io/\n * License: MIT\n */\n\nimport { ɵDomAdapter, ɵsetRootDomAdapter, ɵparseCookieValue, ɵgetDOM, DOCUMENT, ɵPLATFORM_BROWSER_ID, XhrFactory, CommonModule } from '@angular/common';\nimport * as ɵngcc0 from '@angular/core';\nexport { ɵgetDOM } from '@angular/common';\nimport { InjectionToken, ApplicationInitStatus, APP_INITIALIZER, Injector, setTestabilityGetter, ɵglobal, Injectable, ApplicationRef, NgZone, ɵgetDebugNodeR2, NgProbeToken, Optional, Inject, ViewEncapsulation, APP_ID, RendererStyleFlags2, ɵConsole, NgModule, ɵɵdefineInjectable, ɵɵinject, forwardRef, SecurityContext, ɵallowSanitizationBypassAndThrow, ɵunwrapSafeValue, ɵgetSanitizationBypassType, ɵ_sanitizeUrl, ɵ_sanitizeHtml, ɵbypassSanitizationTrustHtml, ɵbypassSanitizationTrustStyle, ɵbypassSanitizationTrustScript, ɵbypassSanitizationTrustUrl, ɵbypassSanitizationTrustResourceUrl, INJECTOR, ErrorHandler, ɵsetDocument, PLATFORM_ID, PLATFORM_INITIALIZER, Sanitizer, createPlatformFactory, platformCore, ɵINJECTOR_SCOPE, RendererFactory2, Testability, ApplicationModule, SkipSelf, Version } from '@angular/core';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Provides DOM operations in any browser environment.\n *\n * @security Tread carefully! Interacting with the DOM directly is dangerous and\n * can introduce XSS risks.\n */\nclass GenericBrowserDomAdapter extends ɵDomAdapter {\n    constructor() {\n        super(...arguments);\n        this.supportsDOMEvents = true;\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * A `DomAdapter` powered by full browser DOM APIs.\n *\n * @security Tread carefully! Interacting with the DOM directly is dangerous and\n * can introduce XSS risks.\n */\n/* tslint:disable:requireParameterType no-console */\nclass BrowserDomAdapter extends GenericBrowserDomAdapter {\n    static makeCurrent() {\n        ɵsetRootDomAdapter(new BrowserDomAdapter());\n    }\n    onAndCancel(el, evt, listener) {\n        el.addEventListener(evt, listener, false);\n        // Needed to follow Dart's subscription semantic, until fix of\n        // https://code.google.com/p/dart/issues/detail?id=17406\n        return () => {\n            el.removeEventListener(evt, listener, false);\n        };\n    }\n    dispatchEvent(el, evt) {\n        el.dispatchEvent(evt);\n    }\n    remove(node) {\n        if (node.parentNode) {\n            node.parentNode.removeChild(node);\n        }\n    }\n    createElement(tagName, doc) {\n        doc = doc || this.getDefaultDocument();\n        return doc.createElement(tagName);\n    }\n    createHtmlDocument() {\n        return document.implementation.createHTMLDocument('fakeTitle');\n    }\n    getDefaultDocument() {\n        return document;\n    }\n    isElementNode(node) {\n        return node.nodeType === Node.ELEMENT_NODE;\n    }\n    isShadowRoot(node) {\n        return node instanceof DocumentFragment;\n    }\n    /** @deprecated No longer being used in Ivy code. To be removed in version 14. */\n    getGlobalEventTarget(doc, target) {\n        if (target === 'window') {\n            return window;\n        }\n        if (target === 'document') {\n            return doc;\n        }\n        if (target === 'body') {\n            return doc.body;\n        }\n        return null;\n    }\n    getBaseHref(doc) {\n        const href = getBaseElementHref();\n        return href == null ? null : relativePath(href);\n    }\n    resetBaseElement() {\n        baseElement = null;\n    }\n    getUserAgent() {\n        return window.navigator.userAgent;\n    }\n    getCookie(name) {\n        return ɵparseCookieValue(document.cookie, name);\n    }\n}\nlet baseElement = null;\nfunction getBaseElementHref() {\n    baseElement = baseElement || document.querySelector('base');\n    return baseElement ? baseElement.getAttribute('href') : null;\n}\n// based on urlUtils.js in AngularJS 1\nlet urlParsingNode;\nfunction relativePath(url) {\n    urlParsingNode = urlParsingNode || document.createElement('a');\n    urlParsingNode.setAttribute('href', url);\n    const pathName = urlParsingNode.pathname;\n    return pathName.charAt(0) === '/' ? pathName : `/${pathName}`;\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * An id that identifies a particular application being bootstrapped, that should\n * match across the client/server boundary.\n */\nconst TRANSITION_ID = new InjectionToken('TRANSITION_ID');\nfunction appInitializerFactory(transitionId, document, injector) {\n    return () => {\n        // Wait for all application initializers to be completed before removing the styles set by\n        // the server.\n        injector.get(ApplicationInitStatus).donePromise.then(() => {\n            const dom = ɵgetDOM();\n            const styles = document.querySelectorAll(`style[ng-transition=\"${transitionId}\"]`);\n            for (let i = 0; i < styles.length; i++) {\n                dom.remove(styles[i]);\n            }\n        });\n    };\n}\nconst SERVER_TRANSITION_PROVIDERS = [\n    {\n        provide: APP_INITIALIZER,\n        useFactory: appInitializerFactory,\n        deps: [TRANSITION_ID, DOCUMENT, Injector],\n        multi: true\n    },\n];\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass BrowserGetTestability {\n    static init() {\n        setTestabilityGetter(new BrowserGetTestability());\n    }\n    addToWindow(registry) {\n        ɵglobal['getAngularTestability'] = (elem, findInAncestors = true) => {\n            const testability = registry.findTestabilityInTree(elem, findInAncestors);\n            if (testability == null) {\n                throw new Error('Could not find testability for element.');\n            }\n            return testability;\n        };\n        ɵglobal['getAllAngularTestabilities'] = () => registry.getAllTestabilities();\n        ɵglobal['getAllAngularRootElements'] = () => registry.getAllRootElements();\n        const whenAllStable = (callback /** TODO #9100 */) => {\n            const testabilities = ɵglobal['getAllAngularTestabilities']();\n            let count = testabilities.length;\n            let didWork = false;\n            const decrement = function (didWork_ /** TODO #9100 */) {\n                didWork = didWork || didWork_;\n                count--;\n                if (count == 0) {\n                    callback(didWork);\n                }\n            };\n            testabilities.forEach(function (testability /** TODO #9100 */) {\n                testability.whenStable(decrement);\n            });\n        };\n        if (!ɵglobal['frameworkStabilizers']) {\n            ɵglobal['frameworkStabilizers'] = [];\n        }\n        ɵglobal['frameworkStabilizers'].push(whenAllStable);\n    }\n    findTestabilityInTree(registry, elem, findInAncestors) {\n        if (elem == null) {\n            return null;\n        }\n        const t = registry.getTestability(elem);\n        if (t != null) {\n            return t;\n        }\n        else if (!findInAncestors) {\n            return null;\n        }\n        if (ɵgetDOM().isShadowRoot(elem)) {\n            return this.findTestabilityInTree(registry, elem.host, true);\n        }\n        return this.findTestabilityInTree(registry, elem.parentElement, true);\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * A factory for `HttpXhrBackend` that uses the `XMLHttpRequest` browser API.\n */\nclass BrowserXhr {\n    build() {\n        return new XMLHttpRequest();\n    }\n}\nBrowserXhr.ɵfac = function BrowserXhr_Factory(t) { return new (t || BrowserXhr)(); };\nBrowserXhr.ɵprov = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjectable({ token: BrowserXhr, factory: BrowserXhr.ɵfac });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(BrowserXhr, [{\n        type: Injectable\n    }], null, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst CAMEL_CASE_REGEXP = /([A-Z])/g;\nconst DASH_CASE_REGEXP = /-([a-z])/g;\nfunction camelCaseToDashCase(input) {\n    return input.replace(CAMEL_CASE_REGEXP, (...m) => '-' + m[1].toLowerCase());\n}\nfunction dashCaseToCamelCase(input) {\n    return input.replace(DASH_CASE_REGEXP, (...m) => m[1].toUpperCase());\n}\n/**\n * Exports the value under a given `name` in the global property `ng`. For example `ng.probe` if\n * `name` is `'probe'`.\n * @param name Name under which it will be exported. Keep in mind this will be a property of the\n * global `ng` object.\n * @param value The value to export.\n */\nfunction exportNgVar(name, value) {\n    if (typeof COMPILED === 'undefined' || !COMPILED) {\n        // Note: we can't export `ng` when using closure enhanced optimization as:\n        // - closure declares globals itself for minified names, which sometimes clobber our `ng` global\n        // - we can't declare a closure extern as the namespace `ng` is already used within Google\n        //   for typings for angularJS (via `goog.provide('ng....')`).\n        const ng = ɵglobal['ng'] = ɵglobal['ng'] || {};\n        ng[name] = value;\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst ɵ0 = () => ({\n    'ApplicationRef': ApplicationRef,\n    'NgZone': NgZone,\n});\nconst CORE_TOKENS = (ɵ0)();\nconst INSPECT_GLOBAL_NAME = 'probe';\nconst CORE_TOKENS_GLOBAL_NAME = 'coreTokens';\n/**\n * Returns a {@link DebugElement} for the given native DOM element, or\n * null if the given native element does not have an Angular view associated\n * with it.\n */\nfunction inspectNativeElementR2(element) {\n    return ɵgetDebugNodeR2(element);\n}\nfunction _createNgProbeR2(coreTokens) {\n    exportNgVar(INSPECT_GLOBAL_NAME, inspectNativeElementR2);\n    exportNgVar(CORE_TOKENS_GLOBAL_NAME, Object.assign(Object.assign({}, CORE_TOKENS), _ngProbeTokensToMap(coreTokens || [])));\n    return () => inspectNativeElementR2;\n}\nfunction _ngProbeTokensToMap(tokens) {\n    return tokens.reduce((prev, t) => (prev[t.name] = t.token, prev), {});\n}\n/**\n * In Ivy, we don't support NgProbe because we have our own set of testing utilities\n * with more robust functionality.\n *\n * We shouldn't bring in NgProbe because it prevents DebugNode and friends from\n * tree-shaking properly.\n */\nconst ELEMENT_PROBE_PROVIDERS__POST_R3__ = [];\n/**\n * Providers which support debugging Angular applications (e.g. via `ng.probe`).\n */\nconst ELEMENT_PROBE_PROVIDERS__PRE_R3__ = [\n    {\n        provide: APP_INITIALIZER,\n        useFactory: _createNgProbeR2,\n        deps: [\n            [NgProbeToken, new Optional()],\n        ],\n        multi: true,\n    },\n];\nconst ELEMENT_PROBE_PROVIDERS = ELEMENT_PROBE_PROVIDERS__PRE_R3__;\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * The injection token for the event-manager plug-in service.\n *\n * @publicApi\n */\nconst EVENT_MANAGER_PLUGINS = new InjectionToken('EventManagerPlugins');\n/**\n * An injectable service that provides event management for Angular\n * through a browser plug-in.\n *\n * @publicApi\n */\nclass EventManager {\n    /**\n     * Initializes an instance of the event-manager service.\n     */\n    constructor(plugins, _zone) {\n        this._zone = _zone;\n        this._eventNameToPlugin = new Map();\n        plugins.forEach(p => p.manager = this);\n        this._plugins = plugins.slice().reverse();\n    }\n    /**\n     * Registers a handler for a specific element and event.\n     *\n     * @param element The HTML element to receive event notifications.\n     * @param eventName The name of the event to listen for.\n     * @param handler A function to call when the notification occurs. Receives the\n     * event object as an argument.\n     * @returns  A callback function that can be used to remove the handler.\n     */\n    addEventListener(element, eventName, handler) {\n        const plugin = this._findPluginFor(eventName);\n        return plugin.addEventListener(element, eventName, handler);\n    }\n    /**\n     * Registers a global handler for an event in a target view.\n     *\n     * @param target A target for global event notifications. One of \"window\", \"document\", or \"body\".\n     * @param eventName The name of the event to listen for.\n     * @param handler A function to call when the notification occurs. Receives the\n     * event object as an argument.\n     * @returns A callback function that can be used to remove the handler.\n     * @deprecated No longer being used in Ivy code. To be removed in version 14.\n     */\n    addGlobalEventListener(target, eventName, handler) {\n        const plugin = this._findPluginFor(eventName);\n        return plugin.addGlobalEventListener(target, eventName, handler);\n    }\n    /**\n     * Retrieves the compilation zone in which event listeners are registered.\n     */\n    getZone() {\n        return this._zone;\n    }\n    /** @internal */\n    _findPluginFor(eventName) {\n        const plugin = this._eventNameToPlugin.get(eventName);\n        if (plugin) {\n            return plugin;\n        }\n        const plugins = this._plugins;\n        for (let i = 0; i < plugins.length; i++) {\n            const plugin = plugins[i];\n            if (plugin.supports(eventName)) {\n                this._eventNameToPlugin.set(eventName, plugin);\n                return plugin;\n            }\n        }\n        throw new Error(`No event manager plugin found for event ${eventName}`);\n    }\n}\nEventManager.ɵfac = function EventManager_Factory(t) { return new (t || EventManager)(ɵngcc0.ɵɵinject(EVENT_MANAGER_PLUGINS), ɵngcc0.ɵɵinject(ɵngcc0.NgZone)); };\nEventManager.ɵprov = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjectable({ token: EventManager, factory: EventManager.ɵfac });\nEventManager.ctorParameters = () => [\n    { type: Array, decorators: [{ type: Inject, args: [EVENT_MANAGER_PLUGINS,] }] },\n    { type: NgZone }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(EventManager, [{\n        type: Injectable\n    }], function () { return [{ type: Array, decorators: [{\n                type: Inject,\n                args: [EVENT_MANAGER_PLUGINS]\n            }] }, { type: ɵngcc0.NgZone }]; }, null); })();\nclass EventManagerPlugin {\n    constructor(_doc) {\n        this._doc = _doc;\n    }\n    addGlobalEventListener(element, eventName, handler) {\n        const target = ɵgetDOM().getGlobalEventTarget(this._doc, element);\n        if (!target) {\n            throw new Error(`Unsupported event target ${target} for event ${eventName}`);\n        }\n        return this.addEventListener(target, eventName, handler);\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass SharedStylesHost {\n    constructor() {\n        /** @internal */\n        this._stylesSet = new Set();\n    }\n    addStyles(styles) {\n        const additions = new Set();\n        styles.forEach(style => {\n            if (!this._stylesSet.has(style)) {\n                this._stylesSet.add(style);\n                additions.add(style);\n            }\n        });\n        this.onStylesAdded(additions);\n    }\n    onStylesAdded(additions) { }\n    getAllStyles() {\n        return Array.from(this._stylesSet);\n    }\n}\nSharedStylesHost.ɵfac = function SharedStylesHost_Factory(t) { return new (t || SharedStylesHost)(); };\nSharedStylesHost.ɵprov = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjectable({ token: SharedStylesHost, factory: SharedStylesHost.ɵfac });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(SharedStylesHost, [{\n        type: Injectable\n    }], function () { return []; }, null); })();\nclass DomSharedStylesHost extends SharedStylesHost {\n    constructor(_doc) {\n        super();\n        this._doc = _doc;\n        // Maps all registered host nodes to a list of style nodes that have been added to the host node.\n        this._hostNodes = new Map();\n        this._hostNodes.set(_doc.head, []);\n    }\n    _addStylesToHost(styles, host, styleNodes) {\n        styles.forEach((style) => {\n            const styleEl = this._doc.createElement('style');\n            styleEl.textContent = style;\n            styleNodes.push(host.appendChild(styleEl));\n        });\n    }\n    addHost(hostNode) {\n        const styleNodes = [];\n        this._addStylesToHost(this._stylesSet, hostNode, styleNodes);\n        this._hostNodes.set(hostNode, styleNodes);\n    }\n    removeHost(hostNode) {\n        const styleNodes = this._hostNodes.get(hostNode);\n        if (styleNodes) {\n            styleNodes.forEach(removeStyle);\n        }\n        this._hostNodes.delete(hostNode);\n    }\n    onStylesAdded(additions) {\n        this._hostNodes.forEach((styleNodes, hostNode) => {\n            this._addStylesToHost(additions, hostNode, styleNodes);\n        });\n    }\n    ngOnDestroy() {\n        this._hostNodes.forEach(styleNodes => styleNodes.forEach(removeStyle));\n    }\n}\nDomSharedStylesHost.ɵfac = function DomSharedStylesHost_Factory(t) { return new (t || DomSharedStylesHost)(ɵngcc0.ɵɵinject(DOCUMENT)); };\nDomSharedStylesHost.ɵprov = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjectable({ token: DomSharedStylesHost, factory: DomSharedStylesHost.ɵfac });\nDomSharedStylesHost.ctorParameters = () => [\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(DomSharedStylesHost, [{\n        type: Injectable\n    }], function () { return [{ type: undefined, decorators: [{\n                type: Inject,\n                args: [DOCUMENT]\n            }] }]; }, null); })();\nfunction removeStyle(styleNode) {\n    ɵgetDOM().remove(styleNode);\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst NAMESPACE_URIS = {\n    'svg': 'http://www.w3.org/2000/svg',\n    'xhtml': 'http://www.w3.org/1999/xhtml',\n    'xlink': 'http://www.w3.org/1999/xlink',\n    'xml': 'http://www.w3.org/XML/1998/namespace',\n    'xmlns': 'http://www.w3.org/2000/xmlns/',\n};\nconst COMPONENT_REGEX = /%COMP%/g;\nconst NG_DEV_MODE = typeof ngDevMode === 'undefined' || !!ngDevMode;\nconst COMPONENT_VARIABLE = '%COMP%';\nconst HOST_ATTR = `_nghost-${COMPONENT_VARIABLE}`;\nconst CONTENT_ATTR = `_ngcontent-${COMPONENT_VARIABLE}`;\nfunction shimContentAttribute(componentShortId) {\n    return CONTENT_ATTR.replace(COMPONENT_REGEX, componentShortId);\n}\nfunction shimHostAttribute(componentShortId) {\n    return HOST_ATTR.replace(COMPONENT_REGEX, componentShortId);\n}\nfunction flattenStyles(compId, styles, target) {\n    for (let i = 0; i < styles.length; i++) {\n        let style = styles[i];\n        if (Array.isArray(style)) {\n            flattenStyles(compId, style, target);\n        }\n        else {\n            style = style.replace(COMPONENT_REGEX, compId);\n            target.push(style);\n        }\n    }\n    return target;\n}\nfunction decoratePreventDefault(eventHandler) {\n    // `DebugNode.triggerEventHandler` needs to know if the listener was created with\n    // decoratePreventDefault or is a listener added outside the Angular context so it can handle the\n    // two differently. In the first case, the special '__ngUnwrap__' token is passed to the unwrap\n    // the listener (see below).\n    return (event) => {\n        // Ivy uses '__ngUnwrap__' as a special token that allows us to unwrap the function\n        // so that it can be invoked programmatically by `DebugNode.triggerEventHandler`. The debug_node\n        // can inspect the listener toString contents for the existence of this special token. Because\n        // the token is a string literal, it is ensured to not be modified by compiled code.\n        if (event === '__ngUnwrap__') {\n            return eventHandler;\n        }\n        const allowDefaultBehavior = eventHandler(event);\n        if (allowDefaultBehavior === false) {\n            // TODO(tbosch): move preventDefault into event plugins...\n            event.preventDefault();\n            event.returnValue = false;\n        }\n        return undefined;\n    };\n}\nlet hasLoggedNativeEncapsulationWarning = false;\nclass DomRendererFactory2 {\n    constructor(eventManager, sharedStylesHost, appId) {\n        this.eventManager = eventManager;\n        this.sharedStylesHost = sharedStylesHost;\n        this.appId = appId;\n        this.rendererByCompId = new Map();\n        this.defaultRenderer = new DefaultDomRenderer2(eventManager);\n    }\n    createRenderer(element, type) {\n        if (!element || !type) {\n            return this.defaultRenderer;\n        }\n        switch (type.encapsulation) {\n            case ViewEncapsulation.Emulated: {\n                let renderer = this.rendererByCompId.get(type.id);\n                if (!renderer) {\n                    renderer = new EmulatedEncapsulationDomRenderer2(this.eventManager, this.sharedStylesHost, type, this.appId);\n                    this.rendererByCompId.set(type.id, renderer);\n                }\n                renderer.applyToHost(element);\n                return renderer;\n            }\n            // @ts-ignore TODO: Remove as part of FW-2290. TS complains about us dealing with an enum\n            // value that is not known (but previously was the value for ViewEncapsulation.Native)\n            case 1:\n            case ViewEncapsulation.ShadowDom:\n                // TODO(FW-2290): remove the `case 1:` fallback logic and the warning in v12.\n                if ((typeof ngDevMode === 'undefined' || ngDevMode) &&\n                    // @ts-ignore TODO: Remove as part of FW-2290. TS complains about us dealing with an\n                    // enum value that is not known (but previously was the value for\n                    // ViewEncapsulation.Native)\n                    !hasLoggedNativeEncapsulationWarning && type.encapsulation === 1) {\n                    hasLoggedNativeEncapsulationWarning = true;\n                    console.warn('ViewEncapsulation.Native is no longer supported. Falling back to ViewEncapsulation.ShadowDom. The fallback will be removed in v12.');\n                }\n                return new ShadowDomRenderer(this.eventManager, this.sharedStylesHost, element, type);\n            default: {\n                if (!this.rendererByCompId.has(type.id)) {\n                    const styles = flattenStyles(type.id, type.styles, []);\n                    this.sharedStylesHost.addStyles(styles);\n                    this.rendererByCompId.set(type.id, this.defaultRenderer);\n                }\n                return this.defaultRenderer;\n            }\n        }\n    }\n    begin() { }\n    end() { }\n}\nDomRendererFactory2.ɵfac = function DomRendererFactory2_Factory(t) { return new (t || DomRendererFactory2)(ɵngcc0.ɵɵinject(EventManager), ɵngcc0.ɵɵinject(DomSharedStylesHost), ɵngcc0.ɵɵinject(APP_ID)); };\nDomRendererFactory2.ɵprov = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjectable({ token: DomRendererFactory2, factory: DomRendererFactory2.ɵfac });\nDomRendererFactory2.ctorParameters = () => [\n    { type: EventManager },\n    { type: DomSharedStylesHost },\n    { type: String, decorators: [{ type: Inject, args: [APP_ID,] }] }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(DomRendererFactory2, [{\n        type: Injectable\n    }], function () { return [{ type: EventManager }, { type: DomSharedStylesHost }, { type: String, decorators: [{\n                type: Inject,\n                args: [APP_ID]\n            }] }]; }, null); })();\nclass DefaultDomRenderer2 {\n    constructor(eventManager) {\n        this.eventManager = eventManager;\n        this.data = Object.create(null);\n    }\n    destroy() { }\n    createElement(name, namespace) {\n        if (namespace) {\n            // In cases where Ivy (not ViewEngine) is giving us the actual namespace, the look up by key\n            // will result in undefined, so we just return the namespace here.\n            return document.createElementNS(NAMESPACE_URIS[namespace] || namespace, name);\n        }\n        return document.createElement(name);\n    }\n    createComment(value) {\n        return document.createComment(value);\n    }\n    createText(value) {\n        return document.createTextNode(value);\n    }\n    appendChild(parent, newChild) {\n        parent.appendChild(newChild);\n    }\n    insertBefore(parent, newChild, refChild) {\n        if (parent) {\n            parent.insertBefore(newChild, refChild);\n        }\n    }\n    removeChild(parent, oldChild) {\n        if (parent) {\n            parent.removeChild(oldChild);\n        }\n    }\n    selectRootElement(selectorOrNode, preserveContent) {\n        let el = typeof selectorOrNode === 'string' ? document.querySelector(selectorOrNode) :\n            selectorOrNode;\n        if (!el) {\n            throw new Error(`The selector \"${selectorOrNode}\" did not match any elements`);\n        }\n        if (!preserveContent) {\n            el.textContent = '';\n        }\n        return el;\n    }\n    parentNode(node) {\n        return node.parentNode;\n    }\n    nextSibling(node) {\n        return node.nextSibling;\n    }\n    setAttribute(el, name, value, namespace) {\n        if (namespace) {\n            name = namespace + ':' + name;\n            // TODO(FW-811): Ivy may cause issues here because it's passing around\n            // full URIs for namespaces, therefore this lookup will fail.\n            const namespaceUri = NAMESPACE_URIS[namespace];\n            if (namespaceUri) {\n                el.setAttributeNS(namespaceUri, name, value);\n            }\n            else {\n                el.setAttribute(name, value);\n            }\n        }\n        else {\n            el.setAttribute(name, value);\n        }\n    }\n    removeAttribute(el, name, namespace) {\n        if (namespace) {\n            // TODO(FW-811): Ivy may cause issues here because it's passing around\n            // full URIs for namespaces, therefore this lookup will fail.\n            const namespaceUri = NAMESPACE_URIS[namespace];\n            if (namespaceUri) {\n                el.removeAttributeNS(namespaceUri, name);\n            }\n            else {\n                // TODO(FW-811): Since ivy is passing around full URIs for namespaces\n                // this could result in properties like `http://www.w3.org/2000/svg:cx=\"123\"`,\n                // which is wrong.\n                el.removeAttribute(`${namespace}:${name}`);\n            }\n        }\n        else {\n            el.removeAttribute(name);\n        }\n    }\n    addClass(el, name) {\n        el.classList.add(name);\n    }\n    removeClass(el, name) {\n        el.classList.remove(name);\n    }\n    setStyle(el, style, value, flags) {\n        if (flags & (RendererStyleFlags2.DashCase | RendererStyleFlags2.Important)) {\n            el.style.setProperty(style, value, flags & RendererStyleFlags2.Important ? 'important' : '');\n        }\n        else {\n            el.style[style] = value;\n        }\n    }\n    removeStyle(el, style, flags) {\n        if (flags & RendererStyleFlags2.DashCase) {\n            el.style.removeProperty(style);\n        }\n        else {\n            // IE requires '' instead of null\n            // see https://github.com/angular/angular/issues/7916\n            el.style[style] = '';\n        }\n    }\n    setProperty(el, name, value) {\n        NG_DEV_MODE && checkNoSyntheticProp(name, 'property');\n        el[name] = value;\n    }\n    setValue(node, value) {\n        node.nodeValue = value;\n    }\n    listen(target, event, callback) {\n        NG_DEV_MODE && checkNoSyntheticProp(event, 'listener');\n        if (typeof target === 'string') {\n            return this.eventManager.addGlobalEventListener(target, event, decoratePreventDefault(callback));\n        }\n        return this.eventManager.addEventListener(target, event, decoratePreventDefault(callback));\n    }\n}\nconst ɵ0$1 = () => '@'.charCodeAt(0);\nconst AT_CHARCODE = (ɵ0$1)();\nfunction checkNoSyntheticProp(name, nameKind) {\n    if (name.charCodeAt(0) === AT_CHARCODE) {\n        throw new Error(`Unexpected synthetic ${nameKind} ${name} found. Please make sure that:\n  - Either \\`BrowserAnimationsModule\\` or \\`NoopAnimationsModule\\` are imported in your application.\n  - There is corresponding configuration for the animation named \\`${name}\\` defined in the \\`animations\\` field of the \\`@Component\\` decorator (see https://angular.io/api/core/Component#animations).`);\n    }\n}\nclass EmulatedEncapsulationDomRenderer2 extends DefaultDomRenderer2 {\n    constructor(eventManager, sharedStylesHost, component, appId) {\n        super(eventManager);\n        this.component = component;\n        const styles = flattenStyles(appId + '-' + component.id, component.styles, []);\n        sharedStylesHost.addStyles(styles);\n        this.contentAttr = shimContentAttribute(appId + '-' + component.id);\n        this.hostAttr = shimHostAttribute(appId + '-' + component.id);\n    }\n    applyToHost(element) {\n        super.setAttribute(element, this.hostAttr, '');\n    }\n    createElement(parent, name) {\n        const el = super.createElement(parent, name);\n        super.setAttribute(el, this.contentAttr, '');\n        return el;\n    }\n}\nclass ShadowDomRenderer extends DefaultDomRenderer2 {\n    constructor(eventManager, sharedStylesHost, hostEl, component) {\n        super(eventManager);\n        this.sharedStylesHost = sharedStylesHost;\n        this.hostEl = hostEl;\n        this.shadowRoot = hostEl.attachShadow({ mode: 'open' });\n        this.sharedStylesHost.addHost(this.shadowRoot);\n        const styles = flattenStyles(component.id, component.styles, []);\n        for (let i = 0; i < styles.length; i++) {\n            const styleEl = document.createElement('style');\n            styleEl.textContent = styles[i];\n            this.shadowRoot.appendChild(styleEl);\n        }\n    }\n    nodeOrShadowRoot(node) {\n        return node === this.hostEl ? this.shadowRoot : node;\n    }\n    destroy() {\n        this.sharedStylesHost.removeHost(this.shadowRoot);\n    }\n    appendChild(parent, newChild) {\n        return super.appendChild(this.nodeOrShadowRoot(parent), newChild);\n    }\n    insertBefore(parent, newChild, refChild) {\n        return super.insertBefore(this.nodeOrShadowRoot(parent), newChild, refChild);\n    }\n    removeChild(parent, oldChild) {\n        return super.removeChild(this.nodeOrShadowRoot(parent), oldChild);\n    }\n    parentNode(node) {\n        return this.nodeOrShadowRoot(super.parentNode(this.nodeOrShadowRoot(node)));\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass DomEventsPlugin extends EventManagerPlugin {\n    constructor(doc) {\n        super(doc);\n    }\n    // This plugin should come last in the list of plugins, because it accepts all\n    // events.\n    supports(eventName) {\n        return true;\n    }\n    addEventListener(element, eventName, handler) {\n        element.addEventListener(eventName, handler, false);\n        return () => this.removeEventListener(element, eventName, handler);\n    }\n    removeEventListener(target, eventName, callback) {\n        return target.removeEventListener(eventName, callback);\n    }\n}\nDomEventsPlugin.ɵfac = function DomEventsPlugin_Factory(t) { return new (t || DomEventsPlugin)(ɵngcc0.ɵɵinject(DOCUMENT)); };\nDomEventsPlugin.ɵprov = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjectable({ token: DomEventsPlugin, factory: DomEventsPlugin.ɵfac });\nDomEventsPlugin.ctorParameters = () => [\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(DomEventsPlugin, [{\n        type: Injectable\n    }], function () { return [{ type: undefined, decorators: [{\n                type: Inject,\n                args: [DOCUMENT]\n            }] }]; }, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Supported HammerJS recognizer event names.\n */\nconst EVENT_NAMES = {\n    // pan\n    'pan': true,\n    'panstart': true,\n    'panmove': true,\n    'panend': true,\n    'pancancel': true,\n    'panleft': true,\n    'panright': true,\n    'panup': true,\n    'pandown': true,\n    // pinch\n    'pinch': true,\n    'pinchstart': true,\n    'pinchmove': true,\n    'pinchend': true,\n    'pinchcancel': true,\n    'pinchin': true,\n    'pinchout': true,\n    // press\n    'press': true,\n    'pressup': true,\n    // rotate\n    'rotate': true,\n    'rotatestart': true,\n    'rotatemove': true,\n    'rotateend': true,\n    'rotatecancel': true,\n    // swipe\n    'swipe': true,\n    'swipeleft': true,\n    'swiperight': true,\n    'swipeup': true,\n    'swipedown': true,\n    // tap\n    'tap': true,\n    'doubletap': true\n};\n/**\n * DI token for providing [HammerJS](https://hammerjs.github.io/) support to Angular.\n * @see `HammerGestureConfig`\n *\n * @ngModule HammerModule\n * @publicApi\n */\nconst HAMMER_GESTURE_CONFIG = new InjectionToken('HammerGestureConfig');\n/**\n * Injection token used to provide a {@link HammerLoader} to Angular.\n *\n * @publicApi\n */\nconst HAMMER_LOADER = new InjectionToken('HammerLoader');\n/**\n * An injectable [HammerJS Manager](https://hammerjs.github.io/api/#hammermanager)\n * for gesture recognition. Configures specific event recognition.\n * @publicApi\n */\nclass HammerGestureConfig {\n    constructor() {\n        /**\n         * A set of supported event names for gestures to be used in Angular.\n         * Angular supports all built-in recognizers, as listed in\n         * [HammerJS documentation](https://hammerjs.github.io/).\n         */\n        this.events = [];\n        /**\n         * Maps gesture event names to a set of configuration options\n         * that specify overrides to the default values for specific properties.\n         *\n         * The key is a supported event name to be configured,\n         * and the options object contains a set of properties, with override values\n         * to be applied to the named recognizer event.\n         * For example, to disable recognition of the rotate event, specify\n         *  `{\"rotate\": {\"enable\": false}}`.\n         *\n         * Properties that are not present take the HammerJS default values.\n         * For information about which properties are supported for which events,\n         * and their allowed and default values, see\n         * [HammerJS documentation](https://hammerjs.github.io/).\n         *\n         */\n        this.overrides = {};\n    }\n    /**\n     * Creates a [HammerJS Manager](https://hammerjs.github.io/api/#hammermanager)\n     * and attaches it to a given HTML element.\n     * @param element The element that will recognize gestures.\n     * @returns A HammerJS event-manager object.\n     */\n    buildHammer(element) {\n        const mc = new Hammer(element, this.options);\n        mc.get('pinch').set({ enable: true });\n        mc.get('rotate').set({ enable: true });\n        for (const eventName in this.overrides) {\n            mc.get(eventName).set(this.overrides[eventName]);\n        }\n        return mc;\n    }\n}\nHammerGestureConfig.ɵfac = function HammerGestureConfig_Factory(t) { return new (t || HammerGestureConfig)(); };\nHammerGestureConfig.ɵprov = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjectable({ token: HammerGestureConfig, factory: HammerGestureConfig.ɵfac });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(HammerGestureConfig, [{\n        type: Injectable\n    }], function () { return []; }, null); })();\n/**\n * Event plugin that adds Hammer support to an application.\n *\n * @ngModule HammerModule\n */\nclass HammerGesturesPlugin extends EventManagerPlugin {\n    constructor(doc, _config, console, loader) {\n        super(doc);\n        this._config = _config;\n        this.console = console;\n        this.loader = loader;\n        this._loaderPromise = null;\n    }\n    supports(eventName) {\n        if (!EVENT_NAMES.hasOwnProperty(eventName.toLowerCase()) && !this.isCustomEvent(eventName)) {\n            return false;\n        }\n        if (!window.Hammer && !this.loader) {\n            if (typeof ngDevMode === 'undefined' || ngDevMode) {\n                this.console.warn(`The \"${eventName}\" event cannot be bound because Hammer.JS is not ` +\n                    `loaded and no custom loader has been specified.`);\n            }\n            return false;\n        }\n        return true;\n    }\n    addEventListener(element, eventName, handler) {\n        const zone = this.manager.getZone();\n        eventName = eventName.toLowerCase();\n        // If Hammer is not present but a loader is specified, we defer adding the event listener\n        // until Hammer is loaded.\n        if (!window.Hammer && this.loader) {\n            this._loaderPromise = this._loaderPromise || this.loader();\n            // This `addEventListener` method returns a function to remove the added listener.\n            // Until Hammer is loaded, the returned function needs to *cancel* the registration rather\n            // than remove anything.\n            let cancelRegistration = false;\n            let deregister = () => {\n                cancelRegistration = true;\n            };\n            this._loaderPromise\n                .then(() => {\n                // If Hammer isn't actually loaded when the custom loader resolves, give up.\n                if (!window.Hammer) {\n                    if (typeof ngDevMode === 'undefined' || ngDevMode) {\n                        this.console.warn(`The custom HAMMER_LOADER completed, but Hammer.JS is not present.`);\n                    }\n                    deregister = () => { };\n                    return;\n                }\n                if (!cancelRegistration) {\n                    // Now that Hammer is loaded and the listener is being loaded for real,\n                    // the deregistration function changes from canceling registration to removal.\n                    deregister = this.addEventListener(element, eventName, handler);\n                }\n            })\n                .catch(() => {\n                if (typeof ngDevMode === 'undefined' || ngDevMode) {\n                    this.console.warn(`The \"${eventName}\" event cannot be bound because the custom ` +\n                        `Hammer.JS loader failed.`);\n                }\n                deregister = () => { };\n            });\n            // Return a function that *executes* `deregister` (and not `deregister` itself) so that we\n            // can change the behavior of `deregister` once the listener is added. Using a closure in\n            // this way allows us to avoid any additional data structures to track listener removal.\n            return () => {\n                deregister();\n            };\n        }\n        return zone.runOutsideAngular(() => {\n            // Creating the manager bind events, must be done outside of angular\n            const mc = this._config.buildHammer(element);\n            const callback = function (eventObj) {\n                zone.runGuarded(function () {\n                    handler(eventObj);\n                });\n            };\n            mc.on(eventName, callback);\n            return () => {\n                mc.off(eventName, callback);\n                // destroy mc to prevent memory leak\n                if (typeof mc.destroy === 'function') {\n                    mc.destroy();\n                }\n            };\n        });\n    }\n    isCustomEvent(eventName) {\n        return this._config.events.indexOf(eventName) > -1;\n    }\n}\nHammerGesturesPlugin.ɵfac = function HammerGesturesPlugin_Factory(t) { return new (t || HammerGesturesPlugin)(ɵngcc0.ɵɵinject(DOCUMENT), ɵngcc0.ɵɵinject(HAMMER_GESTURE_CONFIG), ɵngcc0.ɵɵinject(ɵngcc0.ɵConsole), ɵngcc0.ɵɵinject(HAMMER_LOADER, 8)); };\nHammerGesturesPlugin.ɵprov = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjectable({ token: HammerGesturesPlugin, factory: HammerGesturesPlugin.ɵfac });\nHammerGesturesPlugin.ctorParameters = () => [\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] },\n    { type: HammerGestureConfig, decorators: [{ type: Inject, args: [HAMMER_GESTURE_CONFIG,] }] },\n    { type: ɵConsole },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [HAMMER_LOADER,] }] }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(HammerGesturesPlugin, [{\n        type: Injectable\n    }], function () { return [{ type: undefined, decorators: [{\n                type: Inject,\n                args: [DOCUMENT]\n            }] }, { type: HammerGestureConfig, decorators: [{\n                type: Inject,\n                args: [HAMMER_GESTURE_CONFIG]\n            }] }, { type: ɵngcc0.ɵConsole }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [HAMMER_LOADER]\n            }] }]; }, null); })();\n/**\n * In Ivy, support for Hammer gestures is optional, so applications must\n * import the `HammerModule` at root to turn on support. This means that\n * Hammer-specific code can be tree-shaken away if not needed.\n */\nconst HAMMER_PROVIDERS__POST_R3__ = [];\n/**\n * In View Engine, support for Hammer gestures is built-in by default.\n */\nconst HAMMER_PROVIDERS__PRE_R3__ = [\n    {\n        provide: EVENT_MANAGER_PLUGINS,\n        useClass: HammerGesturesPlugin,\n        multi: true,\n        deps: [DOCUMENT, HAMMER_GESTURE_CONFIG, ɵConsole, [new Optional(), HAMMER_LOADER]]\n    },\n    { provide: HAMMER_GESTURE_CONFIG, useClass: HammerGestureConfig, deps: [] },\n];\nconst HAMMER_PROVIDERS = HAMMER_PROVIDERS__PRE_R3__;\n/**\n * Adds support for HammerJS.\n *\n * Import this module at the root of your application so that Angular can work with\n * HammerJS to detect gesture events.\n *\n * Note that applications still need to include the HammerJS script itself. This module\n * simply sets up the coordination layer between HammerJS and Angular's EventManager.\n *\n * @publicApi\n */\nclass HammerModule {\n}\nHammerModule.ɵfac = function HammerModule_Factory(t) { return new (t || HammerModule)(); };\nHammerModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: HammerModule });\nHammerModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({ providers: HAMMER_PROVIDERS__PRE_R3__ });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(HammerModule, [{\n        type: NgModule,\n        args: [{ providers: HAMMER_PROVIDERS__PRE_R3__ }]\n    }], null, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Defines supported modifiers for key events.\n */\nconst MODIFIER_KEYS = ['alt', 'control', 'meta', 'shift'];\nconst DOM_KEY_LOCATION_NUMPAD = 3;\n// Map to convert some key or keyIdentifier values to what will be returned by getEventKey\nconst _keyMap = {\n    // The following values are here for cross-browser compatibility and to match the W3C standard\n    // cf https://www.w3.org/TR/DOM-Level-3-Events-key/\n    '\\b': 'Backspace',\n    '\\t': 'Tab',\n    '\\x7F': 'Delete',\n    '\\x1B': 'Escape',\n    'Del': 'Delete',\n    'Esc': 'Escape',\n    'Left': 'ArrowLeft',\n    'Right': 'ArrowRight',\n    'Up': 'ArrowUp',\n    'Down': 'ArrowDown',\n    'Menu': 'ContextMenu',\n    'Scroll': 'ScrollLock',\n    'Win': 'OS'\n};\n// There is a bug in Chrome for numeric keypad keys:\n// https://code.google.com/p/chromium/issues/detail?id=155654\n// 1, 2, 3 ... are reported as A, B, C ...\nconst _chromeNumKeyPadMap = {\n    'A': '1',\n    'B': '2',\n    'C': '3',\n    'D': '4',\n    'E': '5',\n    'F': '6',\n    'G': '7',\n    'H': '8',\n    'I': '9',\n    'J': '*',\n    'K': '+',\n    'M': '-',\n    'N': '.',\n    'O': '/',\n    '\\x60': '0',\n    '\\x90': 'NumLock'\n};\nconst ɵ0$2 = (event) => event.altKey, ɵ1 = (event) => event.ctrlKey, ɵ2 = (event) => event.metaKey, ɵ3 = (event) => event.shiftKey;\n/**\n * Retrieves modifiers from key-event objects.\n */\nconst MODIFIER_KEY_GETTERS = {\n    'alt': ɵ0$2,\n    'control': ɵ1,\n    'meta': ɵ2,\n    'shift': ɵ3\n};\n/**\n * @publicApi\n * A browser plug-in that provides support for handling of key events in Angular.\n */\nclass KeyEventsPlugin extends EventManagerPlugin {\n    /**\n     * Initializes an instance of the browser plug-in.\n     * @param doc The document in which key events will be detected.\n     */\n    constructor(doc) {\n        super(doc);\n    }\n    /**\n     * Reports whether a named key event is supported.\n     * @param eventName The event name to query.\n     * @return True if the named key event is supported.\n     */\n    supports(eventName) {\n        return KeyEventsPlugin.parseEventName(eventName) != null;\n    }\n    /**\n     * Registers a handler for a specific element and key event.\n     * @param element The HTML element to receive event notifications.\n     * @param eventName The name of the key event to listen for.\n     * @param handler A function to call when the notification occurs. Receives the\n     * event object as an argument.\n     * @returns The key event that was registered.\n     */\n    addEventListener(element, eventName, handler) {\n        const parsedEvent = KeyEventsPlugin.parseEventName(eventName);\n        const outsideHandler = KeyEventsPlugin.eventCallback(parsedEvent['fullKey'], handler, this.manager.getZone());\n        return this.manager.getZone().runOutsideAngular(() => {\n            return ɵgetDOM().onAndCancel(element, parsedEvent['domEventName'], outsideHandler);\n        });\n    }\n    static parseEventName(eventName) {\n        const parts = eventName.toLowerCase().split('.');\n        const domEventName = parts.shift();\n        if ((parts.length === 0) || !(domEventName === 'keydown' || domEventName === 'keyup')) {\n            return null;\n        }\n        const key = KeyEventsPlugin._normalizeKey(parts.pop());\n        let fullKey = '';\n        MODIFIER_KEYS.forEach(modifierName => {\n            const index = parts.indexOf(modifierName);\n            if (index > -1) {\n                parts.splice(index, 1);\n                fullKey += modifierName + '.';\n            }\n        });\n        fullKey += key;\n        if (parts.length != 0 || key.length === 0) {\n            // returning null instead of throwing to let another plugin process the event\n            return null;\n        }\n        // NOTE: Please don't rewrite this as so, as it will break JSCompiler property renaming.\n        //       The code must remain in the `result['domEventName']` form.\n        // return {domEventName, fullKey};\n        const result = {};\n        result['domEventName'] = domEventName;\n        result['fullKey'] = fullKey;\n        return result;\n    }\n    static getEventFullKey(event) {\n        let fullKey = '';\n        let key = getEventKey(event);\n        key = key.toLowerCase();\n        if (key === ' ') {\n            key = 'space'; // for readability\n        }\n        else if (key === '.') {\n            key = 'dot'; // because '.' is used as a separator in event names\n        }\n        MODIFIER_KEYS.forEach(modifierName => {\n            if (modifierName != key) {\n                const modifierGetter = MODIFIER_KEY_GETTERS[modifierName];\n                if (modifierGetter(event)) {\n                    fullKey += modifierName + '.';\n                }\n            }\n        });\n        fullKey += key;\n        return fullKey;\n    }\n    /**\n     * Configures a handler callback for a key event.\n     * @param fullKey The event name that combines all simultaneous keystrokes.\n     * @param handler The function that responds to the key event.\n     * @param zone The zone in which the event occurred.\n     * @returns A callback function.\n     */\n    static eventCallback(fullKey, handler, zone) {\n        return (event /** TODO #9100 */) => {\n            if (KeyEventsPlugin.getEventFullKey(event) === fullKey) {\n                zone.runGuarded(() => handler(event));\n            }\n        };\n    }\n    /** @internal */\n    static _normalizeKey(keyName) {\n        // TODO: switch to a Map if the mapping grows too much\n        switch (keyName) {\n            case 'esc':\n                return 'escape';\n            default:\n                return keyName;\n        }\n    }\n}\nKeyEventsPlugin.ɵfac = function KeyEventsPlugin_Factory(t) { return new (t || KeyEventsPlugin)(ɵngcc0.ɵɵinject(DOCUMENT)); };\nKeyEventsPlugin.ɵprov = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjectable({ token: KeyEventsPlugin, factory: KeyEventsPlugin.ɵfac });\nKeyEventsPlugin.ctorParameters = () => [\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(KeyEventsPlugin, [{\n        type: Injectable\n    }], function () { return [{ type: undefined, decorators: [{\n                type: Inject,\n                args: [DOCUMENT]\n            }] }]; }, null); })();\nfunction getEventKey(event) {\n    let key = event.key;\n    if (key == null) {\n        key = event.keyIdentifier;\n        // keyIdentifier is defined in the old draft of DOM Level 3 Events implemented by Chrome and\n        // Safari cf\n        // https://www.w3.org/TR/2007/WD-DOM-Level-3-Events-20071221/events.html#Events-KeyboardEvents-Interfaces\n        if (key == null) {\n            return 'Unidentified';\n        }\n        if (key.startsWith('U+')) {\n            key = String.fromCharCode(parseInt(key.substring(2), 16));\n            if (event.location === DOM_KEY_LOCATION_NUMPAD && _chromeNumKeyPadMap.hasOwnProperty(key)) {\n                // There is a bug in Chrome for numeric keypad keys:\n                // https://code.google.com/p/chromium/issues/detail?id=155654\n                // 1, 2, 3 ... are reported as A, B, C ...\n                key = _chromeNumKeyPadMap[key];\n            }\n        }\n    }\n    return _keyMap[key] || key;\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * DomSanitizer helps preventing Cross Site Scripting Security bugs (XSS) by sanitizing\n * values to be safe to use in the different DOM contexts.\n *\n * For example, when binding a URL in an `<a [href]=\"someValue\">` hyperlink, `someValue` will be\n * sanitized so that an attacker cannot inject e.g. a `javascript:` URL that would execute code on\n * the website.\n *\n * In specific situations, it might be necessary to disable sanitization, for example if the\n * application genuinely needs to produce a `javascript:` style link with a dynamic value in it.\n * Users can bypass security by constructing a value with one of the `bypassSecurityTrust...`\n * methods, and then binding to that value from the template.\n *\n * These situations should be very rare, and extraordinary care must be taken to avoid creating a\n * Cross Site Scripting (XSS) security bug!\n *\n * When using `bypassSecurityTrust...`, make sure to call the method as early as possible and as\n * close as possible to the source of the value, to make it easy to verify no security bug is\n * created by its use.\n *\n * It is not required (and not recommended) to bypass security if the value is safe, e.g. a URL that\n * does not start with a suspicious protocol, or an HTML snippet that does not contain dangerous\n * code. The sanitizer leaves safe values intact.\n *\n * @security Calling any of the `bypassSecurityTrust...` APIs disables Angular's built-in\n * sanitization for the value passed in. Carefully check and audit all values and code paths going\n * into this call. Make sure any user data is appropriately escaped for this security context.\n * For more detail, see the [Security Guide](https://g.co/ng/security).\n *\n * @publicApi\n */\nclass DomSanitizer {\n}\nDomSanitizer.ɵfac = function DomSanitizer_Factory(t) { return new (t || DomSanitizer)(); };\nDomSanitizer.ɵprov = ɵɵdefineInjectable({ factory: function DomSanitizer_Factory() { return ɵɵinject(DomSanitizerImpl); }, token: DomSanitizer, providedIn: \"root\" });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(DomSanitizer, [{\n        type: Injectable,\n        args: [{ providedIn: 'root', useExisting: forwardRef(() => DomSanitizerImpl) }]\n    }], null, null); })();\nfunction domSanitizerImplFactory(injector) {\n    return new DomSanitizerImpl(injector.get(DOCUMENT));\n}\nclass DomSanitizerImpl extends DomSanitizer {\n    constructor(_doc) {\n        super();\n        this._doc = _doc;\n    }\n    sanitize(ctx, value) {\n        if (value == null)\n            return null;\n        switch (ctx) {\n            case SecurityContext.NONE:\n                return value;\n            case SecurityContext.HTML:\n                if (ɵallowSanitizationBypassAndThrow(value, \"HTML\" /* Html */)) {\n                    return ɵunwrapSafeValue(value);\n                }\n                return ɵ_sanitizeHtml(this._doc, String(value)).toString();\n            case SecurityContext.STYLE:\n                if (ɵallowSanitizationBypassAndThrow(value, \"Style\" /* Style */)) {\n                    return ɵunwrapSafeValue(value);\n                }\n                return value;\n            case SecurityContext.SCRIPT:\n                if (ɵallowSanitizationBypassAndThrow(value, \"Script\" /* Script */)) {\n                    return ɵunwrapSafeValue(value);\n                }\n                throw new Error('unsafe value used in a script context');\n            case SecurityContext.URL:\n                const type = ɵgetSanitizationBypassType(value);\n                if (ɵallowSanitizationBypassAndThrow(value, \"URL\" /* Url */)) {\n                    return ɵunwrapSafeValue(value);\n                }\n                return ɵ_sanitizeUrl(String(value));\n            case SecurityContext.RESOURCE_URL:\n                if (ɵallowSanitizationBypassAndThrow(value, \"ResourceURL\" /* ResourceUrl */)) {\n                    return ɵunwrapSafeValue(value);\n                }\n                throw new Error('unsafe value used in a resource URL context (see https://g.co/ng/security#xss)');\n            default:\n                throw new Error(`Unexpected SecurityContext ${ctx} (see https://g.co/ng/security#xss)`);\n        }\n    }\n    bypassSecurityTrustHtml(value) {\n        return ɵbypassSanitizationTrustHtml(value);\n    }\n    bypassSecurityTrustStyle(value) {\n        return ɵbypassSanitizationTrustStyle(value);\n    }\n    bypassSecurityTrustScript(value) {\n        return ɵbypassSanitizationTrustScript(value);\n    }\n    bypassSecurityTrustUrl(value) {\n        return ɵbypassSanitizationTrustUrl(value);\n    }\n    bypassSecurityTrustResourceUrl(value) {\n        return ɵbypassSanitizationTrustResourceUrl(value);\n    }\n}\nDomSanitizerImpl.ɵfac = function DomSanitizerImpl_Factory(t) { return new (t || DomSanitizerImpl)(ɵngcc0.ɵɵinject(DOCUMENT)); };\nDomSanitizerImpl.ɵprov = ɵɵdefineInjectable({ factory: function DomSanitizerImpl_Factory() { return domSanitizerImplFactory(ɵɵinject(INJECTOR)); }, token: DomSanitizerImpl, providedIn: \"root\" });\nDomSanitizerImpl.ctorParameters = () => [\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(DomSanitizerImpl, [{\n        type: Injectable,\n        args: [{ providedIn: 'root', useFactory: domSanitizerImplFactory, deps: [Injector] }]\n    }], function () { return [{ type: undefined, decorators: [{\n                type: Inject,\n                args: [DOCUMENT]\n            }] }]; }, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction initDomAdapter() {\n    BrowserDomAdapter.makeCurrent();\n    BrowserGetTestability.init();\n}\nfunction errorHandler() {\n    return new ErrorHandler();\n}\nfunction _document() {\n    // Tell ivy about the global document\n    ɵsetDocument(document);\n    return document;\n}\nconst ɵ0$3 = ɵPLATFORM_BROWSER_ID;\nconst INTERNAL_BROWSER_PLATFORM_PROVIDERS = [\n    { provide: PLATFORM_ID, useValue: ɵ0$3 },\n    { provide: PLATFORM_INITIALIZER, useValue: initDomAdapter, multi: true },\n    { provide: DOCUMENT, useFactory: _document, deps: [] },\n];\nconst BROWSER_SANITIZATION_PROVIDERS__PRE_R3__ = [\n    { provide: Sanitizer, useExisting: DomSanitizer },\n    { provide: DomSanitizer, useClass: DomSanitizerImpl, deps: [DOCUMENT] },\n];\nconst BROWSER_SANITIZATION_PROVIDERS__POST_R3__ = [];\n/**\n * @security Replacing built-in sanitization providers exposes the application to XSS risks.\n * Attacker-controlled data introduced by an unsanitized provider could expose your\n * application to XSS risks. For more detail, see the [Security Guide](https://g.co/ng/security).\n * @publicApi\n */\nconst BROWSER_SANITIZATION_PROVIDERS = BROWSER_SANITIZATION_PROVIDERS__PRE_R3__;\n/**\n * A factory function that returns a `PlatformRef` instance associated with browser service\n * providers.\n *\n * @publicApi\n */\nconst platformBrowser = createPlatformFactory(platformCore, 'browser', INTERNAL_BROWSER_PLATFORM_PROVIDERS);\nconst BROWSER_MODULE_PROVIDERS = [\n    BROWSER_SANITIZATION_PROVIDERS,\n    { provide: ɵINJECTOR_SCOPE, useValue: 'root' },\n    { provide: ErrorHandler, useFactory: errorHandler, deps: [] },\n    {\n        provide: EVENT_MANAGER_PLUGINS,\n        useClass: DomEventsPlugin,\n        multi: true,\n        deps: [DOCUMENT, NgZone, PLATFORM_ID]\n    },\n    { provide: EVENT_MANAGER_PLUGINS, useClass: KeyEventsPlugin, multi: true, deps: [DOCUMENT] },\n    HAMMER_PROVIDERS,\n    {\n        provide: DomRendererFactory2,\n        useClass: DomRendererFactory2,\n        deps: [EventManager, DomSharedStylesHost, APP_ID]\n    },\n    { provide: RendererFactory2, useExisting: DomRendererFactory2 },\n    { provide: SharedStylesHost, useExisting: DomSharedStylesHost },\n    { provide: DomSharedStylesHost, useClass: DomSharedStylesHost, deps: [DOCUMENT] },\n    { provide: Testability, useClass: Testability, deps: [NgZone] },\n    { provide: EventManager, useClass: EventManager, deps: [EVENT_MANAGER_PLUGINS, NgZone] },\n    { provide: XhrFactory, useClass: BrowserXhr, deps: [] },\n    ELEMENT_PROBE_PROVIDERS,\n];\n/**\n * Exports required infrastructure for all Angular apps.\n * Included by default in all Angular apps created with the CLI\n * `new` command.\n * Re-exports `CommonModule` and `ApplicationModule`, making their\n * exports and providers available to all apps.\n *\n * @publicApi\n */\nclass BrowserModule {\n    constructor(parentModule) {\n        if (parentModule) {\n            throw new Error(`BrowserModule has already been loaded. If you need access to common directives such as NgIf and NgFor from a lazy loaded module, import CommonModule instead.`);\n        }\n    }\n    /**\n     * Configures a browser-based app to transition from a server-rendered app, if\n     * one is present on the page.\n     *\n     * @param params An object containing an identifier for the app to transition.\n     * The ID must match between the client and server versions of the app.\n     * @returns The reconfigured `BrowserModule` to import into the app's root `AppModule`.\n     */\n    static withServerTransition(params) {\n        return {\n            ngModule: BrowserModule,\n            providers: [\n                { provide: APP_ID, useValue: params.appId },\n                { provide: TRANSITION_ID, useExisting: APP_ID },\n                SERVER_TRANSITION_PROVIDERS,\n            ],\n        };\n    }\n}\nBrowserModule.ɵfac = function BrowserModule_Factory(t) { return new (t || BrowserModule)(ɵngcc0.ɵɵinject(BrowserModule, 12)); };\nBrowserModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: BrowserModule });\nBrowserModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({ providers: BROWSER_MODULE_PROVIDERS, imports: [CommonModule, ApplicationModule] });\nBrowserModule.ctorParameters = () => [\n    { type: BrowserModule, decorators: [{ type: Optional }, { type: SkipSelf }, { type: Inject, args: [BrowserModule,] }] }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(BrowserModule, [{\n        type: NgModule,\n        args: [{ providers: BROWSER_MODULE_PROVIDERS, exports: [CommonModule, ApplicationModule] }]\n    }], function () { return [{ type: BrowserModule, decorators: [{\n                type: Optional\n            }, {\n                type: SkipSelf\n            }, {\n                type: Inject,\n                args: [BrowserModule]\n            }] }]; }, null); })();\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(BrowserModule, { exports: function () { return [CommonModule, ApplicationModule]; } }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Factory to create a `Meta` service instance for the current DOM document.\n */\nfunction createMeta() {\n    return new Meta(ɵɵinject(DOCUMENT));\n}\n/**\n * A service for managing HTML `<meta>` tags.\n *\n * Properties of the `MetaDefinition` object match the attributes of the\n * HTML `<meta>` tag. These tags define document metadata that is important for\n * things like configuring a Content Security Policy, defining browser compatibility\n * and security settings, setting HTTP Headers, defining rich content for social sharing,\n * and Search Engine Optimization (SEO).\n *\n * To identify specific `<meta>` tags in a document, use an attribute selection\n * string in the format `\"tag_attribute='value string'\"`.\n * For example, an `attrSelector` value of `\"name='description'\"` matches a tag\n * whose `name` attribute has the value `\"description\"`.\n * Selectors are used with the `querySelector()` Document method,\n * in the format `meta[{attrSelector}]`.\n *\n * @see [HTML meta tag](https://developer.mozilla.org/docs/Web/HTML/Element/meta)\n * @see [Document.querySelector()](https://developer.mozilla.org/docs/Web/API/Document/querySelector)\n *\n *\n * @publicApi\n */\nclass Meta {\n    constructor(_doc) {\n        this._doc = _doc;\n        this._dom = ɵgetDOM();\n    }\n    /**\n     * Retrieves or creates a specific `<meta>` tag element in the current HTML document.\n     * In searching for an existing tag, Angular attempts to match the `name` or `property` attribute\n     * values in the provided tag definition, and verifies that all other attribute values are equal.\n     * If an existing element is found, it is returned and is not modified in any way.\n     * @param tag The definition of a `<meta>` element to match or create.\n     * @param forceCreation True to create a new element without checking whether one already exists.\n     * @returns The existing element with the same attributes and values if found,\n     * the new element if no match is found, or `null` if the tag parameter is not defined.\n     */\n    addTag(tag, forceCreation = false) {\n        if (!tag)\n            return null;\n        return this._getOrCreateElement(tag, forceCreation);\n    }\n    /**\n     * Retrieves or creates a set of `<meta>` tag elements in the current HTML document.\n     * In searching for an existing tag, Angular attempts to match the `name` or `property` attribute\n     * values in the provided tag definition, and verifies that all other attribute values are equal.\n     * @param tags An array of tag definitions to match or create.\n     * @param forceCreation True to create new elements without checking whether they already exist.\n     * @returns The matching elements if found, or the new elements.\n     */\n    addTags(tags, forceCreation = false) {\n        if (!tags)\n            return [];\n        return tags.reduce((result, tag) => {\n            if (tag) {\n                result.push(this._getOrCreateElement(tag, forceCreation));\n            }\n            return result;\n        }, []);\n    }\n    /**\n     * Retrieves a `<meta>` tag element in the current HTML document.\n     * @param attrSelector The tag attribute and value to match against, in the format\n     * `\"tag_attribute='value string'\"`.\n     * @returns The matching element, if any.\n     */\n    getTag(attrSelector) {\n        if (!attrSelector)\n            return null;\n        return this._doc.querySelector(`meta[${attrSelector}]`) || null;\n    }\n    /**\n     * Retrieves a set of `<meta>` tag elements in the current HTML document.\n     * @param attrSelector The tag attribute and value to match against, in the format\n     * `\"tag_attribute='value string'\"`.\n     * @returns The matching elements, if any.\n     */\n    getTags(attrSelector) {\n        if (!attrSelector)\n            return [];\n        const list /*NodeList*/ = this._doc.querySelectorAll(`meta[${attrSelector}]`);\n        return list ? [].slice.call(list) : [];\n    }\n    /**\n     * Modifies an existing `<meta>` tag element in the current HTML document.\n     * @param tag The tag description with which to replace the existing tag content.\n     * @param selector A tag attribute and value to match against, to identify\n     * an existing tag. A string in the format `\"tag_attribute=`value string`\"`.\n     * If not supplied, matches a tag with the same `name` or `property` attribute value as the\n     * replacement tag.\n     * @return The modified element.\n     */\n    updateTag(tag, selector) {\n        if (!tag)\n            return null;\n        selector = selector || this._parseSelector(tag);\n        const meta = this.getTag(selector);\n        if (meta) {\n            return this._setMetaElementAttributes(tag, meta);\n        }\n        return this._getOrCreateElement(tag, true);\n    }\n    /**\n     * Removes an existing `<meta>` tag element from the current HTML document.\n     * @param attrSelector A tag attribute and value to match against, to identify\n     * an existing tag. A string in the format `\"tag_attribute=`value string`\"`.\n     */\n    removeTag(attrSelector) {\n        this.removeTagElement(this.getTag(attrSelector));\n    }\n    /**\n     * Removes an existing `<meta>` tag element from the current HTML document.\n     * @param meta The tag definition to match against to identify an existing tag.\n     */\n    removeTagElement(meta) {\n        if (meta) {\n            this._dom.remove(meta);\n        }\n    }\n    _getOrCreateElement(meta, forceCreation = false) {\n        if (!forceCreation) {\n            const selector = this._parseSelector(meta);\n            // It's allowed to have multiple elements with the same name so it's not enough to\n            // just check that element with the same name already present on the page. We also need to\n            // check if element has tag attributes\n            const elem = this.getTags(selector).filter(elem => this._containsAttributes(meta, elem))[0];\n            if (elem !== undefined)\n                return elem;\n        }\n        const element = this._dom.createElement('meta');\n        this._setMetaElementAttributes(meta, element);\n        const head = this._doc.getElementsByTagName('head')[0];\n        head.appendChild(element);\n        return element;\n    }\n    _setMetaElementAttributes(tag, el) {\n        Object.keys(tag).forEach((prop) => el.setAttribute(this._getMetaKeyMap(prop), tag[prop]));\n        return el;\n    }\n    _parseSelector(tag) {\n        const attr = tag.name ? 'name' : 'property';\n        return `${attr}=\"${tag[attr]}\"`;\n    }\n    _containsAttributes(tag, elem) {\n        return Object.keys(tag).every((key) => elem.getAttribute(this._getMetaKeyMap(key)) === tag[key]);\n    }\n    _getMetaKeyMap(prop) {\n        return META_KEYS_MAP[prop] || prop;\n    }\n}\nMeta.ɵfac = function Meta_Factory(t) { return new (t || Meta)(ɵngcc0.ɵɵinject(DOCUMENT)); };\nMeta.ɵprov = ɵɵdefineInjectable({ factory: createMeta, token: Meta, providedIn: \"root\" });\nMeta.ctorParameters = () => [\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(Meta, [{\n        type: Injectable,\n        args: [{ providedIn: 'root', useFactory: createMeta, deps: [] }]\n    }], function () { return [{ type: undefined, decorators: [{\n                type: Inject,\n                args: [DOCUMENT]\n            }] }]; }, null); })();\n/**\n * Mapping for MetaDefinition properties with their correct meta attribute names\n */\nconst META_KEYS_MAP = {\n    httpEquiv: 'http-equiv'\n};\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Factory to create Title service.\n */\nfunction createTitle() {\n    return new Title(ɵɵinject(DOCUMENT));\n}\n/**\n * A service that can be used to get and set the title of a current HTML document.\n *\n * Since an Angular application can't be bootstrapped on the entire HTML document (`<html>` tag)\n * it is not possible to bind to the `text` property of the `HTMLTitleElement` elements\n * (representing the `<title>` tag). Instead, this service can be used to set and get the current\n * title value.\n *\n * @publicApi\n */\nclass Title {\n    constructor(_doc) {\n        this._doc = _doc;\n    }\n    /**\n     * Get the title of the current HTML document.\n     */\n    getTitle() {\n        return this._doc.title;\n    }\n    /**\n     * Set the title of the current HTML document.\n     * @param newTitle\n     */\n    setTitle(newTitle) {\n        this._doc.title = newTitle || '';\n    }\n}\nTitle.ɵfac = function Title_Factory(t) { return new (t || Title)(ɵngcc0.ɵɵinject(DOCUMENT)); };\nTitle.ɵprov = ɵɵdefineInjectable({ factory: createTitle, token: Title, providedIn: \"root\" });\nTitle.ctorParameters = () => [\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(Title, [{\n        type: Injectable,\n        args: [{ providedIn: 'root', useFactory: createTitle, deps: [] }]\n    }], function () { return [{ type: undefined, decorators: [{\n                type: Inject,\n                args: [DOCUMENT]\n            }] }]; }, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst win = typeof window !== 'undefined' && window || {};\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass ChangeDetectionPerfRecord {\n    constructor(msPerTick, numTicks) {\n        this.msPerTick = msPerTick;\n        this.numTicks = numTicks;\n    }\n}\n/**\n * Entry point for all Angular profiling-related debug tools. This object\n * corresponds to the `ng.profiler` in the dev console.\n */\nclass AngularProfiler {\n    constructor(ref) {\n        this.appRef = ref.injector.get(ApplicationRef);\n    }\n    // tslint:disable:no-console\n    /**\n     * Exercises change detection in a loop and then prints the average amount of\n     * time in milliseconds how long a single round of change detection takes for\n     * the current state of the UI. It runs a minimum of 5 rounds for a minimum\n     * of 500 milliseconds.\n     *\n     * Optionally, a user may pass a `config` parameter containing a map of\n     * options. Supported options are:\n     *\n     * `record` (boolean) - causes the profiler to record a CPU profile while\n     * it exercises the change detector. Example:\n     *\n     * ```\n     * ng.profiler.timeChangeDetection({record: true})\n     * ```\n     */\n    timeChangeDetection(config) {\n        const record = config && config['record'];\n        const profileName = 'Change Detection';\n        // Profiler is not available in Android browsers without dev tools opened\n        const isProfilerAvailable = win.console.profile != null;\n        if (record && isProfilerAvailable) {\n            win.console.profile(profileName);\n        }\n        const start = performanceNow();\n        let numTicks = 0;\n        while (numTicks < 5 || (performanceNow() - start) < 500) {\n            this.appRef.tick();\n            numTicks++;\n        }\n        const end = performanceNow();\n        if (record && isProfilerAvailable) {\n            win.console.profileEnd(profileName);\n        }\n        const msPerTick = (end - start) / numTicks;\n        win.console.log(`ran ${numTicks} change detection cycles`);\n        win.console.log(`${msPerTick.toFixed(2)} ms per check`);\n        return new ChangeDetectionPerfRecord(msPerTick, numTicks);\n    }\n}\nfunction performanceNow() {\n    return win.performance && win.performance.now ? win.performance.now() :\n        new Date().getTime();\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst PROFILER_GLOBAL_NAME = 'profiler';\n/**\n * Enabled Angular debug tools that are accessible via your browser's\n * developer console.\n *\n * Usage:\n *\n * 1. Open developer console (e.g. in Chrome Ctrl + Shift + j)\n * 1. Type `ng.` (usually the console will show auto-complete suggestion)\n * 1. Try the change detection profiler `ng.profiler.timeChangeDetection()`\n *    then hit Enter.\n *\n * @publicApi\n */\nfunction enableDebugTools(ref) {\n    exportNgVar(PROFILER_GLOBAL_NAME, new AngularProfiler(ref));\n    return ref;\n}\n/**\n * Disables Angular tools.\n *\n * @publicApi\n */\nfunction disableDebugTools() {\n    exportNgVar(PROFILER_GLOBAL_NAME, null);\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction escapeHtml(text) {\n    const escapedText = {\n        '&': '&a;',\n        '\"': '&q;',\n        '\\'': '&s;',\n        '<': '&l;',\n        '>': '&g;',\n    };\n    return text.replace(/[&\"'<>]/g, s => escapedText[s]);\n}\nfunction unescapeHtml(text) {\n    const unescapedText = {\n        '&a;': '&',\n        '&q;': '\"',\n        '&s;': '\\'',\n        '&l;': '<',\n        '&g;': '>',\n    };\n    return text.replace(/&[^;]+;/g, s => unescapedText[s]);\n}\n/**\n * Create a `StateKey<T>` that can be used to store value of type T with `TransferState`.\n *\n * Example:\n *\n * ```\n * const COUNTER_KEY = makeStateKey<number>('counter');\n * let value = 10;\n *\n * transferState.set(COUNTER_KEY, value);\n * ```\n *\n * @publicApi\n */\nfunction makeStateKey(key) {\n    return key;\n}\n/**\n * A key value store that is transferred from the application on the server side to the application\n * on the client side.\n *\n * `TransferState` will be available as an injectable token. To use it import\n * `ServerTransferStateModule` on the server and `BrowserTransferStateModule` on the client.\n *\n * The values in the store are serialized/deserialized using JSON.stringify/JSON.parse. So only\n * boolean, number, string, null and non-class objects will be serialized and deserialized in a\n * non-lossy manner.\n *\n * @publicApi\n */\nclass TransferState {\n    constructor() {\n        this.store = {};\n        this.onSerializeCallbacks = {};\n    }\n    /** @internal */\n    static init(initState) {\n        const transferState = new TransferState();\n        transferState.store = initState;\n        return transferState;\n    }\n    /**\n     * Get the value corresponding to a key. Return `defaultValue` if key is not found.\n     */\n    get(key, defaultValue) {\n        return this.store[key] !== undefined ? this.store[key] : defaultValue;\n    }\n    /**\n     * Set the value corresponding to a key.\n     */\n    set(key, value) {\n        this.store[key] = value;\n    }\n    /**\n     * Remove a key from the store.\n     */\n    remove(key) {\n        delete this.store[key];\n    }\n    /**\n     * Test whether a key exists in the store.\n     */\n    hasKey(key) {\n        return this.store.hasOwnProperty(key);\n    }\n    /**\n     * Register a callback to provide the value for a key when `toJson` is called.\n     */\n    onSerialize(key, callback) {\n        this.onSerializeCallbacks[key] = callback;\n    }\n    /**\n     * Serialize the current state of the store to JSON.\n     */\n    toJson() {\n        // Call the onSerialize callbacks and put those values into the store.\n        for (const key in this.onSerializeCallbacks) {\n            if (this.onSerializeCallbacks.hasOwnProperty(key)) {\n                try {\n                    this.store[key] = this.onSerializeCallbacks[key]();\n                }\n                catch (e) {\n                    console.warn('Exception in onSerialize callback: ', e);\n                }\n            }\n        }\n        return JSON.stringify(this.store);\n    }\n}\nTransferState.ɵfac = function TransferState_Factory(t) { return new (t || TransferState)(); };\nTransferState.ɵprov = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjectable({ token: TransferState, factory: TransferState.ɵfac });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(TransferState, [{\n        type: Injectable\n    }], function () { return []; }, null); })();\nfunction initTransferState(doc, appId) {\n    // Locate the script tag with the JSON data transferred from the server.\n    // The id of the script tag is set to the Angular appId + 'state'.\n    const script = doc.getElementById(appId + '-state');\n    let initialState = {};\n    if (script && script.textContent) {\n        try {\n            // Avoid using any here as it triggers lint errors in google3 (any is not allowed).\n            initialState = JSON.parse(unescapeHtml(script.textContent));\n        }\n        catch (e) {\n            console.warn('Exception while restoring TransferState for app ' + appId, e);\n        }\n    }\n    return TransferState.init(initialState);\n}\n/**\n * NgModule to install on the client side while using the `TransferState` to transfer state from\n * server to client.\n *\n * @publicApi\n */\nclass BrowserTransferStateModule {\n}\nBrowserTransferStateModule.ɵfac = function BrowserTransferStateModule_Factory(t) { return new (t || BrowserTransferStateModule)(); };\nBrowserTransferStateModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: BrowserTransferStateModule });\nBrowserTransferStateModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({ providers: [{ provide: TransferState, useFactory: initTransferState, deps: [DOCUMENT, APP_ID] }] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(BrowserTransferStateModule, [{\n        type: NgModule,\n        args: [{\n                providers: [{ provide: TransferState, useFactory: initTransferState, deps: [DOCUMENT, APP_ID] }]\n            }]\n    }], null, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Predicates for use with {@link DebugElement}'s query functions.\n *\n * @publicApi\n */\nclass By {\n    /**\n     * Match all nodes.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * {@example platform-browser/dom/debug/ts/by/by.ts region='by_all'}\n     */\n    static all() {\n        return () => true;\n    }\n    /**\n     * Match elements by the given CSS selector.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * {@example platform-browser/dom/debug/ts/by/by.ts region='by_css'}\n     */\n    static css(selector) {\n        return (debugElement) => {\n            return debugElement.nativeElement != null ?\n                elementMatches(debugElement.nativeElement, selector) :\n                false;\n        };\n    }\n    /**\n     * Match nodes that have the given directive present.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * {@example platform-browser/dom/debug/ts/by/by.ts region='by_directive'}\n     */\n    static directive(type) {\n        return (debugNode) => debugNode.providerTokens.indexOf(type) !== -1;\n    }\n}\nfunction elementMatches(n, selector) {\n    if (ɵgetDOM().isElementNode(n)) {\n        return n.matches && n.matches(selector) ||\n            n.msMatchesSelector && n.msMatchesSelector(selector) ||\n            n.webkitMatchesSelector && n.webkitMatchesSelector(selector);\n    }\n    return false;\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @publicApi\n */\nconst VERSION = new Version('12.2.17');\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// This file only reexports content of the `src` folder. Keep it that way.\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { BrowserModule, BrowserTransferStateModule, By, DomSanitizer, EVENT_MANAGER_PLUGINS, EventManager, HAMMER_GESTURE_CONFIG, HAMMER_LOADER, HammerGestureConfig, HammerModule, Meta, Title, TransferState, VERSION, disableDebugTools, enableDebugTools, makeStateKey, platformBrowser, BROWSER_SANITIZATION_PROVIDERS as ɵBROWSER_SANITIZATION_PROVIDERS, BROWSER_SANITIZATION_PROVIDERS__POST_R3__ as ɵBROWSER_SANITIZATION_PROVIDERS__POST_R3__, BrowserDomAdapter as ɵBrowserDomAdapter, BrowserGetTestability as ɵBrowserGetTestability, DomEventsPlugin as ɵDomEventsPlugin, DomRendererFactory2 as ɵDomRendererFactory2, DomSanitizerImpl as ɵDomSanitizerImpl, DomSharedStylesHost as ɵDomSharedStylesHost, ELEMENT_PROBE_PROVIDERS as ɵELEMENT_PROBE_PROVIDERS, ELEMENT_PROBE_PROVIDERS__POST_R3__ as ɵELEMENT_PROBE_PROVIDERS__POST_R3__, HAMMER_PROVIDERS__POST_R3__ as ɵHAMMER_PROVIDERS__POST_R3__, HammerGesturesPlugin as ɵHammerGesturesPlugin, INTERNAL_BROWSER_PLATFORM_PROVIDERS as ɵINTERNAL_BROWSER_PLATFORM_PROVIDERS, KeyEventsPlugin as ɵKeyEventsPlugin, NAMESPACE_URIS as ɵNAMESPACE_URIS, SharedStylesHost as ɵSharedStylesHost, TRANSITION_ID as ɵTRANSITION_ID, errorHandler as ɵangular_packages_platform_browser_platform_browser_a, _document as ɵangular_packages_platform_browser_platform_browser_b, BROWSER_MODULE_PROVIDERS as ɵangular_packages_platform_browser_platform_browser_c, createMeta as ɵangular_packages_platform_browser_platform_browser_d, createTitle as ɵangular_packages_platform_browser_platform_browser_e, initTransferState as ɵangular_packages_platform_browser_platform_browser_f, EventManagerPlugin as ɵangular_packages_platform_browser_platform_browser_g, HAMMER_PROVIDERS__PRE_R3__ as ɵangular_packages_platform_browser_platform_browser_h, HAMMER_PROVIDERS as ɵangular_packages_platform_browser_platform_browser_i, domSanitizerImplFactory as ɵangular_packages_platform_browser_platform_browser_j, appInitializerFactory as ɵangular_packages_platform_browser_platform_browser_k, SERVER_TRANSITION_PROVIDERS as ɵangular_packages_platform_browser_platform_browser_l, _createNgProbeR2 as ɵangular_packages_platform_browser_platform_browser_m, ELEMENT_PROBE_PROVIDERS__PRE_R3__ as ɵangular_packages_platform_browser_platform_browser_n, BrowserXhr as ɵangular_packages_platform_browser_platform_browser_o, GenericBrowserDomAdapter as ɵangular_packages_platform_browser_platform_browser_p, escapeHtml as ɵescapeHtml, flattenStyles as ɵflattenStyles, initDomAdapter as ɵinitDomAdapter, shimContentAttribute as ɵshimContentAttribute, shimHostAttribute as ɵshimHostAttribute };\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}