{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"../../services/drink.service\";\nimport * as i3 from \"@angular/common/http\";\nexport let MenuComponent = /*#__PURE__*/(() => {\n  class MenuComponent {\n    constructor(route, drinkService, http) {\n      this.route = route;\n      this.drinkService = drinkService;\n      this.http = http;\n      this.drinks = [];\n      this.inventoryItems = []; //form payload\n\n      this.formPayload = {\n        id: 0,\n        name: '',\n        unitsOnHand: 0\n      };\n      this.httpOptions = {\n        headers: new HttpHeaders({\n          'Content-Type': 'application/json'\n        })\n      };\n    }\n\n    ngOnInit() {}\n\n    onCreateDrink(drink) {\n      // get the drink name and store in locaStorage\n      localStorage.setItem('drinkName', drink); // Check to see if we are getting a value for 'drinkName' from locaStorage\n\n      console.log(\"drinkName from localStorage: \", localStorage.getItem('drinkName')); // open 'dispensed message' for user\n\n      this.route.navigate(['/dispensed']); // handle edits to inventory units\n\n      switch (drink) {\n        case 'Coffee':\n          {\n            //statements;\n            console.log(\"Switch value: Coffee\"); // Recipe items\n            // Id for Coffee: 1 (3)\n            // Id for Sugar: 3 (1)\n            // Id for Cream: 4 (1)\n            // get value as string and store in const\n\n            const currentItemCountAsString = localStorage.getItem('currentCoffeeItemCount'); // update content\n            // Get Item counts: Coffee\n\n            this.http.get('https://my-json-server.typicode.com/PaulyWolly/Barista-matic-main/inventoryItems/1').subscribe(res => {\n              console.log('currentCoffeeItemCount: ', res.unitsOnHand);\n              const newCoffeeItemCount = res.unitsOnHand - 3;\n              console.log('newCoffeeItemCount: ', newCoffeeItemCount); // Coffee ingredient update\n\n              const drinkBody1 = {\n                id: 1,\n                name: 'Coffee',\n                unitsOnHand: newCoffeeItemCount\n              };\n              this.http.put('https://my-json-server.typicode.com/PaulyWolly/Barista-matic-main/inventoryItems/1', drinkBody1).subscribe(data => this.postId = data.id);\n            }); // Get Item counts: Sugar\n\n            this.http.get('http://localhost:8080/inventoryItems/3').subscribe(res => {\n              console.log('currentSugarItemCount: ', res.unitsOnHand);\n              const newSugarItemCount = res.unitsOnHand - 1;\n              console.log('newSugarItemCount: ', newSugarItemCount); // Sugar ingredient update\n\n              const drinkBody2 = {\n                id: 3,\n                name: 'Sugar',\n                unitsOnHand: newSugarItemCount\n              };\n              this.http.put('http://localhost:8080/inventoryItems/3', drinkBody2).subscribe(data => this.postId = data.id);\n            }); // Get Item counts: Cream\n\n            this.http.get('http://localhost:8080/inventoryItems/4').subscribe(res => {\n              console.log('currentCreamItemCount: ', res.unitsOnHand);\n              const newCreamItemCount = res.unitsOnHand - 1;\n              console.log('newCreamItemCount: ', newCreamItemCount); // Cream ingredient update\n\n              const drinkBody3 = {\n                id: 4,\n                name: 'Cream',\n                unitsOnHand: newCreamItemCount\n              };\n              this.http.put('http://localhost:8080/inventoryItems/4', drinkBody3).subscribe(data => this.postId = data.id);\n            });\n            break;\n          }\n\n        case 'Decaf Coffee':\n          {\n            console.log(\"Switch value: Decaf coffee\"); // Recipe items\n            // Id for Decaf Coffee: 2 (3)\n            // Id for Sugar: 3 (1)\n            // Id for Cream: 4 (1)\n            // Get Item counts: Decaf Coffee\n\n            this.http.get('http://localhost:8080/inventoryItems/2').subscribe(res => {\n              console.log('currentDecafCoffeeItemCount: ', res.unitsOnHand);\n              const newDecafCoffeeItemCount = res.unitsOnHand - 3;\n              console.log('newDecafCoffeeItemCount: ', newDecafCoffeeItemCount); // Decaf Coffee ingredient update\n\n              const drinkBody4 = {\n                id: 2,\n                name: 'Decaf Coffee',\n                unitsOnHand: newDecafCoffeeItemCount\n              };\n              this.http.put('http://localhost:8080/inventoryItems/2', drinkBody4).subscribe(data => this.postId = data.id);\n            }); // Get Item counts: Sugar\n\n            this.http.get('http://localhost:8080/inventoryItems/3').subscribe(res => {\n              console.log('currentSugarItemCount: ', res.unitsOnHand);\n              const newSugarItemCount = res.unitsOnHand - 1;\n              console.log('newSugarItemCount: ', newSugarItemCount); // Sugar ingredient update\n\n              const drinkBody5 = {\n                id: 3,\n                name: 'Sugar',\n                unitsOnHand: newSugarItemCount\n              };\n              this.http.put('http://localhost:8080/inventoryItems/3', drinkBody5).subscribe(data => this.postId = data.id);\n            }); // Get Item counts: Cream\n\n            this.http.get('http://localhost:8080/inventoryItems/4').subscribe(res => {\n              console.log('currentCreamItemCount: ', res.unitsOnHand);\n              const newCreamItemCount = res.unitsOnHand - 1;\n              console.log('newCreamItemCount: ', newCreamItemCount); // Cream ingredient update\n\n              const drinkBody6 = {\n                id: 4,\n                name: 'Cream',\n                unitsOnHand: newCreamItemCount\n              };\n              this.http.put('http://localhost:8080/inventoryItems/4', drinkBody6).subscribe(data => this.postId = data.id);\n            });\n            break;\n          }\n\n        case 'Cafe Latte':\n          {\n            console.log(\"Switch value: Cafe Latte\"); // Recipe items\n            // Id for Espresso: 7 (2)\n            // Id for Steamed Milk: 5 (1)\n            // Get Item counts: Espresso\n\n            this.http.get('http://localhost:8080/inventoryItems/7').subscribe(res => {\n              console.log('currentEspressoItemCount: ', res.unitsOnHand);\n              const newEspressoItemCount = res.unitsOnHand - 2;\n              console.log('newEspressoItemCount: ', newEspressoItemCount); // Espresso ingredient update\n\n              const drinkBody7 = {\n                id: 7,\n                name: 'Espresso',\n                unitsOnHand: newEspressoItemCount\n              };\n              this.http.put('http://localhost:8080/inventoryItems/7', drinkBody7).subscribe(data => this.postId = data.id);\n            }); // Get Item counts: Steamed Milk\n\n            this.http.get('http://localhost:8080/inventoryItems/5').subscribe(res => {\n              console.log('currentSteamedMilkItemCount: ', res.unitsOnHand);\n              const newSteamedMilkItemCount = res.unitsOnHand - 1;\n              console.log('newSteamedMilkItemCount: ', newSteamedMilkItemCount); // Steamed Milk ingredient update\n\n              const drinkBody8 = {\n                id: 5,\n                name: 'Steamed Milk',\n                unitsOnHand: newSteamedMilkItemCount\n              };\n              this.http.put('http://localhost:8080/inventoryItems/5', drinkBody8).subscribe(data => this.postId = data.id);\n            });\n            break;\n          }\n\n        case 'Cafe Americano':\n          {\n            console.log(\"Switch value: Cafe Americano\"); // Recipe item(s)\n            // Id for Espresso: 7 (3)\n            // Get Item counts: Espresso\n\n            this.http.get('http://localhost:8080/inventoryItems/7').subscribe(res => {\n              console.log('currentEspressoItemCount: ', res.unitsOnHand);\n              const newEspressoItemCount = res.unitsOnHand - 3;\n              console.log('newEspressoItemCount: ', newEspressoItemCount); // Espresso ingredient update\n\n              const drinkBody9 = {\n                id: 7,\n                name: 'Espresso',\n                unitsOnHand: newEspressoItemCount\n              };\n              this.http.put('http://localhost:8080/inventoryItems/7', drinkBody9).subscribe(data => this.postId = data.id);\n            });\n            break;\n          }\n\n        case 'Cafe Mocha':\n          {\n            console.log(\"SWitch value: Cafe Mocha\"); // Recipe items\n            // Id for Espresso: 7 (1)\n            // Id for Cocoa: 8 (1)\n            // Id for Steamed Milk: 5 (1)\n            // Id for Whipped Cream: 9 (1)\n            // Get Item counts: Espresso\n\n            this.http.get('http://localhost:8080/inventoryItems/7').subscribe(res => {\n              console.log('currentEspressoItemCount: ', res.unitsOnHand);\n              const newEspressoItemCount = res.unitsOnHand - 1;\n              console.log('newEspressoItemCount: ', newEspressoItemCount); // Espresso ingredient update\n\n              const drinkBodyMocha = {\n                id: 7,\n                name: 'Espresso',\n                unitsOnHand: newEspressoItemCount\n              };\n              this.http.put('http://localhost:8080/inventoryItems/7', drinkBodyMocha).subscribe(data => this.postId = data.id);\n            }); // Get Item counts: Cocoa\n\n            this.http.get('http://localhost:8080/inventoryItems/8').subscribe(res => {\n              console.log('currentCocoaItemCount: ', res.unitsOnHand);\n              const newCocoaItemCount = res.unitsOnHand - 1;\n              console.log('newCocoaItemCount: ', newCocoaItemCount); // Sugar ingredient update\n\n              const drinkBody10 = {\n                id: 8,\n                name: 'Cocoa',\n                unitsOnHand: newCocoaItemCount\n              };\n              this.http.put('http://localhost:8080/inventoryItems/8', drinkBody10).subscribe(data => this.postId = data.id);\n            }); // Get Item counts: Steamed Milk\n\n            this.http.get('http://localhost:8080/inventoryItems/5').subscribe(res => {\n              console.log('currentSteamedMilkItemCount: ', res.unitsOnHand);\n              const newSteamedMilkItemCount = res.unitsOnHand - 1;\n              console.log('newSteamedMilkItemCount: ', newSteamedMilkItemCount); // Steamed Milk ingredient update\n\n              const drinkBody11 = {\n                id: 5,\n                name: 'Steamed Milk',\n                unitsOnHand: newSteamedMilkItemCount\n              };\n              this.http.put('http://localhost:8080/inventoryItems/5', drinkBody11).subscribe(data => this.postId = data.id);\n            }); // Get Item counts: Whipped Cream\n\n            this.http.get('http://localhost:8080/inventoryItems/9').subscribe(res => {\n              console.log('currentWhippedCreamItemCount: ', res.unitsOnHand);\n              const newWhippedCreamItemCount = res.unitsOnHand - 1;\n              console.log('newWhippedCreammItemCount: ', newWhippedCreamItemCount); // Cream ingredient update\n\n              const drinkBody12 = {\n                id: 9,\n                name: 'Whipped Cream',\n                unitsOnHand: newWhippedCreamItemCount\n              };\n              this.http.put('http://localhost:8080/inventoryItems/9', drinkBody12).subscribe(data => this.postId = data.id);\n            });\n            break;\n          }\n\n        case 'Cappuccino':\n          {\n            console.log(\"Switch value: Cappuccino\"); // Recipe items\n            // Id for Espresso: 7 (2)\n            // Id for Steamed Milk: 5 (1)\n            // Id for Foamed Milk: 6 (1)\n            // Get Item counts: Espresso\n\n            this.http.get('http://localhost:8080/inventoryItems/7').subscribe(res => {\n              console.log('currentEspressoItemCount: ', res.unitsOnHand);\n              const newEspressoItemCount = res.unitsOnHand - 2;\n              console.log('newEspressoItemCount: ', newEspressoItemCount); // Espresso ingredient update\n\n              const drinkBody13 = {\n                id: 7,\n                name: 'Espresso',\n                unitsOnHand: newEspressoItemCount\n              };\n              this.http.put('http://localhost:8080/inventoryItems/7', drinkBody13).subscribe(data => this.postId = data.id);\n            }); // Get Item counts: Steamed Milk\n\n            this.http.get('http://localhost:8080/inventoryItems/5').subscribe(res => {\n              console.log('currentSteamedMilkItemCount: ', res.unitsOnHand);\n              const newSteamedMilkItemCount = res.unitsOnHand - 1;\n              console.log('newSteamedMilkItemCount: ', newSteamedMilkItemCount); // Steamed Milk ingredient update\n\n              const drinkBody14 = {\n                id: 5,\n                name: 'Steamed Milk',\n                unitsOnHand: newSteamedMilkItemCount\n              };\n              this.http.put('http://localhost:8080/inventoryItems/5', drinkBody14).subscribe(data => this.postId = data.id);\n            }); // Get Item counts: Foamed Milk\n\n            this.http.get('http://localhost:8080/inventoryItems/6').subscribe(res => {\n              console.log('currentFoamedMilkItemCount: ', res.unitsOnHand);\n              const newFoamedMilkItemCount = res.unitsOnHand - 1;\n              console.log('newFoamedMilkItemCount: ', newFoamedMilkItemCount); // Foamed Milk ingredient update\n\n              const drinkBody15 = {\n                id: 6,\n                name: 'Foamed Milk',\n                unitsOnHand: newFoamedMilkItemCount\n              };\n              this.http.put('http://localhost:8080/inventoryItems/6', drinkBody15).subscribe(data => this.postId = data.id);\n            });\n            break;\n          }\n\n        default:\n          {\n            break;\n          }\n      }\n    }\n\n  }\n\n  MenuComponent.ɵfac = function MenuComponent_Factory(t) {\n    return new (t || MenuComponent)(i0.ɵɵdirectiveInject(i1.Router), i0.ɵɵdirectiveInject(i2.DrinkService), i0.ɵɵdirectiveInject(i3.HttpClient));\n  };\n\n  MenuComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: MenuComponent,\n    selectors: [[\"app-menu\"]],\n    decls: 56,\n    vars: 0,\n    consts: [[1, \"menu-container\"], [1, \"row\"], [1, \"col-sm-12\"], [1, \"menu-title\"], [1, \"table\", \"table-bordered\"], [\"scope\", \"col\", 1, \"dn-title\"], [\"scope\", \"col\", 1, \"ingredient-title\"], [\"scope\", \"row\"], [1, \"float-right\", \"btn\", \"btn-sm\", \"btn-primary\", 3, \"click\"], [\"colspan\", \"2\"]],\n    template: function MenuComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"div\")(4, \"h3\", 3);\n        i0.ɵɵtext(5, \"Menu\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(6, \"table\", 4)(7, \"thead\")(8, \"tr\")(9, \"th\", 5);\n        i0.ɵɵtext(10, \"Drink Name\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(11, \"th\", 6);\n        i0.ɵɵtext(12, \"Ingredients\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(13, \"tbody\")(14, \"tr\")(15, \"th\", 7);\n        i0.ɵɵtext(16, \"Coffee\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(17, \"td\");\n        i0.ɵɵtext(18, \"3 units of coffee, 1 unit of sugar, 1 unit of cream \");\n        i0.ɵɵelementStart(19, \"button\", 8);\n        i0.ɵɵlistener(\"click\", function MenuComponent_Template_button_click_19_listener() {\n          return ctx.onCreateDrink(\"Coffee\");\n        });\n        i0.ɵɵtext(20, \"Select\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(21, \"tr\")(22, \"th\", 7);\n        i0.ɵɵtext(23, \"Decaf Coffee\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(24, \"td\");\n        i0.ɵɵtext(25, \"3 units of Decaf Coffee, 1 unit of sugar, 1 unit of cream \");\n        i0.ɵɵelementStart(26, \"button\", 8);\n        i0.ɵɵlistener(\"click\", function MenuComponent_Template_button_click_26_listener() {\n          return ctx.onCreateDrink(\"Decaf Coffee\");\n        });\n        i0.ɵɵtext(27, \"Select\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(28, \"tr\")(29, \"th\", 7);\n        i0.ɵɵtext(30, \"Cafe Latte\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(31, \"td\", 9);\n        i0.ɵɵtext(32, \"2 units of Espresso, 1 unit of steamed milk \");\n        i0.ɵɵelementStart(33, \"button\", 8);\n        i0.ɵɵlistener(\"click\", function MenuComponent_Template_button_click_33_listener() {\n          return ctx.onCreateDrink(\"Cafe Latte\");\n        });\n        i0.ɵɵtext(34, \"Select\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(35, \"tr\")(36, \"th\", 7);\n        i0.ɵɵtext(37, \"Cafe Americano\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(38, \"td\", 9);\n        i0.ɵɵtext(39, \"3 units of Espresso \");\n        i0.ɵɵelementStart(40, \"button\", 8);\n        i0.ɵɵlistener(\"click\", function MenuComponent_Template_button_click_40_listener() {\n          return ctx.onCreateDrink(\"Cafe Americano\");\n        });\n        i0.ɵɵtext(41, \"Select\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(42, \"tr\")(43, \"th\", 7);\n        i0.ɵɵtext(44, \"Cafe Mocha\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(45, \"td\", 9);\n        i0.ɵɵtext(46, \"1 unit of Espresso, 1 unit of cocoa, 1 unit of steamed milk, 1 unit of whipped cream \");\n        i0.ɵɵelementStart(47, \"button\", 8);\n        i0.ɵɵlistener(\"click\", function MenuComponent_Template_button_click_47_listener() {\n          return ctx.onCreateDrink(\"Cafe Mocha\");\n        });\n        i0.ɵɵtext(48, \"Select\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(49, \"tr\")(50, \"th\", 7);\n        i0.ɵɵtext(51, \"Cappuccino\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(52, \"td\", 9);\n        i0.ɵɵtext(53, \"2 units of Espresso, 1 unit of steamed milk, 1 unit of foamed milk\");\n        i0.ɵɵelementStart(54, \"button\", 8);\n        i0.ɵɵlistener(\"click\", function MenuComponent_Template_button_click_54_listener() {\n          return ctx.onCreateDrink(\"Cappuccino\");\n        });\n        i0.ɵɵtext(55, \"Select\");\n        i0.ɵɵelementEnd()()()()()()()()();\n      }\n    },\n    styles: [\"table[_ngcontent-%COMP%]{border:1px solid #808080;position:relative;right:100px;width:900px}table[_ngcontent-%COMP%]   thead[_ngcontent-%COMP%]   .dn-title[_ngcontent-%COMP%], .ingredient-title[_ngcontent-%COMP%]{background-color:#585858;color:#c8c7c7;font-weight:400!important}table[_ngcontent-%COMP%]   thead[_ngcontent-%COMP%]   .dn-title[_ngcontent-%COMP%]{width:20%}.float-right[_ngcontent-%COMP%]{float:right;margin-right:10px}.menu-title[_ngcontent-%COMP%]{position:relative;right:100px}.menu-container[_ngcontent-%COMP%]{height:500px}\"]\n  });\n  return MenuComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}