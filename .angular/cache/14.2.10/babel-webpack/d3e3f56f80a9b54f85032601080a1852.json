{"ast":null,"code":"\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n    return extendStatics(d, b);\n  };\n  return function (d, b) {\n    extendStatics(d, b);\n    function __() {\n      this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar Subject_1 = require(\"../Subject\");\nvar innerSubscribe_1 = require(\"../innerSubscribe\");\nfunction repeatWhen(notifier) {\n  return function (source) {\n    return source.lift(new RepeatWhenOperator(notifier));\n  };\n}\nexports.repeatWhen = repeatWhen;\nvar RepeatWhenOperator = function () {\n  function RepeatWhenOperator(notifier) {\n    this.notifier = notifier;\n  }\n  RepeatWhenOperator.prototype.call = function (subscriber, source) {\n    return source.subscribe(new RepeatWhenSubscriber(subscriber, this.notifier, source));\n  };\n  return RepeatWhenOperator;\n}();\nvar RepeatWhenSubscriber = function (_super) {\n  __extends(RepeatWhenSubscriber, _super);\n  function RepeatWhenSubscriber(destination, notifier, source) {\n    var _this = _super.call(this, destination) || this;\n    _this.notifier = notifier;\n    _this.source = source;\n    _this.sourceIsBeingSubscribedTo = true;\n    return _this;\n  }\n  RepeatWhenSubscriber.prototype.notifyNext = function () {\n    this.sourceIsBeingSubscribedTo = true;\n    this.source.subscribe(this);\n  };\n  RepeatWhenSubscriber.prototype.notifyComplete = function () {\n    if (this.sourceIsBeingSubscribedTo === false) {\n      return _super.prototype.complete.call(this);\n    }\n  };\n  RepeatWhenSubscriber.prototype.complete = function () {\n    this.sourceIsBeingSubscribedTo = false;\n    if (!this.isStopped) {\n      if (!this.retries) {\n        this.subscribeToRetries();\n      }\n      if (!this.retriesSubscription || this.retriesSubscription.closed) {\n        return _super.prototype.complete.call(this);\n      }\n      this._unsubscribeAndRecycle();\n      this.notifications.next(undefined);\n    }\n  };\n  RepeatWhenSubscriber.prototype._unsubscribe = function () {\n    var _a = this,\n      notifications = _a.notifications,\n      retriesSubscription = _a.retriesSubscription;\n    if (notifications) {\n      notifications.unsubscribe();\n      this.notifications = undefined;\n    }\n    if (retriesSubscription) {\n      retriesSubscription.unsubscribe();\n      this.retriesSubscription = undefined;\n    }\n    this.retries = undefined;\n  };\n  RepeatWhenSubscriber.prototype._unsubscribeAndRecycle = function () {\n    var _unsubscribe = this._unsubscribe;\n    this._unsubscribe = null;\n    _super.prototype._unsubscribeAndRecycle.call(this);\n    this._unsubscribe = _unsubscribe;\n    return this;\n  };\n  RepeatWhenSubscriber.prototype.subscribeToRetries = function () {\n    this.notifications = new Subject_1.Subject();\n    var retries;\n    try {\n      var notifier = this.notifier;\n      retries = notifier(this.notifications);\n    } catch (e) {\n      return _super.prototype.complete.call(this);\n    }\n    this.retries = retries;\n    this.retriesSubscription = innerSubscribe_1.innerSubscribe(retries, new innerSubscribe_1.SimpleInnerSubscriber(this));\n  };\n  return RepeatWhenSubscriber;\n}(innerSubscribe_1.SimpleOuterSubscriber);","map":{"version":3,"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","constructor","prototype","create","defineProperty","exports","value","Subject_1","require","innerSubscribe_1","repeatWhen","notifier","source","lift","RepeatWhenOperator","call","subscriber","subscribe","RepeatWhenSubscriber","_super","destination","_this","sourceIsBeingSubscribedTo","notifyNext","notifyComplete","complete","isStopped","retries","subscribeToRetries","retriesSubscription","closed","_unsubscribeAndRecycle","notifications","next","undefined","_unsubscribe","_a","unsubscribe","Subject","e","innerSubscribe","SimpleInnerSubscriber","SimpleOuterSubscriber"],"sources":["C:/projects/ANGULAR/Barista-matic-main/node_modules/rxjs/internal/operators/repeatWhen.js"],"sourcesContent":["\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Subject_1 = require(\"../Subject\");\nvar innerSubscribe_1 = require(\"../innerSubscribe\");\nfunction repeatWhen(notifier) {\n    return function (source) { return source.lift(new RepeatWhenOperator(notifier)); };\n}\nexports.repeatWhen = repeatWhen;\nvar RepeatWhenOperator = (function () {\n    function RepeatWhenOperator(notifier) {\n        this.notifier = notifier;\n    }\n    RepeatWhenOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new RepeatWhenSubscriber(subscriber, this.notifier, source));\n    };\n    return RepeatWhenOperator;\n}());\nvar RepeatWhenSubscriber = (function (_super) {\n    __extends(RepeatWhenSubscriber, _super);\n    function RepeatWhenSubscriber(destination, notifier, source) {\n        var _this = _super.call(this, destination) || this;\n        _this.notifier = notifier;\n        _this.source = source;\n        _this.sourceIsBeingSubscribedTo = true;\n        return _this;\n    }\n    RepeatWhenSubscriber.prototype.notifyNext = function () {\n        this.sourceIsBeingSubscribedTo = true;\n        this.source.subscribe(this);\n    };\n    RepeatWhenSubscriber.prototype.notifyComplete = function () {\n        if (this.sourceIsBeingSubscribedTo === false) {\n            return _super.prototype.complete.call(this);\n        }\n    };\n    RepeatWhenSubscriber.prototype.complete = function () {\n        this.sourceIsBeingSubscribedTo = false;\n        if (!this.isStopped) {\n            if (!this.retries) {\n                this.subscribeToRetries();\n            }\n            if (!this.retriesSubscription || this.retriesSubscription.closed) {\n                return _super.prototype.complete.call(this);\n            }\n            this._unsubscribeAndRecycle();\n            this.notifications.next(undefined);\n        }\n    };\n    RepeatWhenSubscriber.prototype._unsubscribe = function () {\n        var _a = this, notifications = _a.notifications, retriesSubscription = _a.retriesSubscription;\n        if (notifications) {\n            notifications.unsubscribe();\n            this.notifications = undefined;\n        }\n        if (retriesSubscription) {\n            retriesSubscription.unsubscribe();\n            this.retriesSubscription = undefined;\n        }\n        this.retries = undefined;\n    };\n    RepeatWhenSubscriber.prototype._unsubscribeAndRecycle = function () {\n        var _unsubscribe = this._unsubscribe;\n        this._unsubscribe = null;\n        _super.prototype._unsubscribeAndRecycle.call(this);\n        this._unsubscribe = _unsubscribe;\n        return this;\n    };\n    RepeatWhenSubscriber.prototype.subscribeToRetries = function () {\n        this.notifications = new Subject_1.Subject();\n        var retries;\n        try {\n            var notifier = this.notifier;\n            retries = notifier(this.notifications);\n        }\n        catch (e) {\n            return _super.prototype.complete.call(this);\n        }\n        this.retries = retries;\n        this.retriesSubscription = innerSubscribe_1.innerSubscribe(retries, new innerSubscribe_1.SimpleInnerSubscriber(this));\n    };\n    return RepeatWhenSubscriber;\n}(innerSubscribe_1.SimpleOuterSubscriber));\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}